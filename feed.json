{
	"version": "https://jsonfeed.org/version/1",
	"title": "Saji Weerasingham",
	"icon": "https://micro.blog/sajilicious/avatar.jpg",
	"home_page_url": "https://sajilicious.micro.blog/",
	"feed_url": "https://sajilicious.micro.blog/feed.json",
	"items": [
		
			{
				"id": "http://sajilicious.micro.blog/2025/05/05/i-quite-like-null-check.html",
				
				"content_html": "<p>I quite like null check in the assignment that&rsquo;s coming in C# 14 #dotnet</p>\n<p><a href=\"https://youtube.com/watch?v=HMSfIkYI5ls&amp;si=Myqrjqf82Oh0MQ4q\">youtube.com/watch</a></p>\n",
				"content_text": "I quite like null check in the assignment that's coming in C# 14 #dotnet\n\n[youtube.com/watch](https://youtube.com/watch?v=HMSfIkYI5ls&si=Myqrjqf82Oh0MQ4q)\n",
				"date_published": "2025-05-05T06:48:53+10:00",
				"url": "https://sajilicious.micro.blog/2025/05/05/i-quite-like-null-check.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/30/in-case-you-havent-already.html",
				
				"content_html": "<p>In case you haven&rsquo;t already voted.</p>\n<p>This tool, like ABC Vote Compass, asks you a series of questions.</p>\n<p>It then asks you for your postcode and tells you which candidates (not just parties) align with your answers.</p>\n<p>#auspol</p>\n<p><a href=\"https://www.buildaballot.org.au\">www.buildaballot.org.au</a></p>\n",
				"content_text": "In case you haven't already voted. \n\nThis tool, like ABC Vote Compass, asks you a series of questions.\n\nIt then asks you for your postcode and tells you which candidates (not just parties) align with your answers.\n\n#auspol\n\n[www.buildaballot.org.au](https://www.buildaballot.org.au)\n",
				"date_published": "2025-04-30T06:27:04+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/30/in-case-you-havent-already.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/30/some-of-the-shady-deals.html",
				
				"content_html": "<p>Some of the shady deals Peter Dutton did as Minister for Home Affairs #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=CPiFXrQodP0&amp;si=TCbKZvs_W4v8kBe3\">youtube.com/watch</a></p>\n",
				"content_text": "Some of the shady deals Peter Dutton did as Minister for Home Affairs #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=CPiFXrQodP0&si=TCbKZvs_W4v8kBe3)\n",
				"date_published": "2025-04-30T05:38:45+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/30/some-of-the-shady-deals.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/30/it-turns-out-peter-dutton.html",
				
				"content_html": "<p>It turns out Peter Dutton was in the Queensland Police at the time that Fitzgerald Enquiry was finding all sorts of corruption in the police force and Queensland government #auspol #friendlyjordies</p>\n<p><a href=\"https://youtube.com/watch?v=46qYKwYRshU&amp;si=CiXS2NWUK9Ka5nkI\">youtube.com/watch</a></p>\n",
				"content_text": "It turns out Peter Dutton was in the Queensland Police at the time that Fitzgerald Enquiry was finding all sorts of corruption in the police force and Queensland government #auspol #friendlyjordies\n\n[youtube.com/watch](https://youtube.com/watch?v=46qYKwYRshU&si=CiXS2NWUK9Ka5nkI)\n",
				"date_published": "2025-04-30T04:59:47+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/30/it-turns-out-peter-dutton.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/30/httpsyoutubecomwatchvqykwyrshusibwcgyhmfrxuihrk.html",
				
				"content_html": "<p><a href=\"https://youtube.com/watch?v=46qYKwYRshU&amp;si=3bwcGyHMfrxUihrK\">youtube.com/watch</a></p>\n",
				"content_text": "[youtube.com/watch](https://youtube.com/watch?v=46qYKwYRshU&si=3bwcGyHMfrxUihrK)\n",
				"date_published": "2025-04-30T04:51:12+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/30/httpsyoutubecomwatchvqykwyrshusibwcgyhmfrxuihrk.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/30/some-bombshells-about-the-childcare.html",
				
				"content_html": "<p>Some bombshells about the childcare centres Peter Dutton used to own via trust in here #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=C28OaLMnbgs&amp;si=-XS9tGeEx2Y8R6Ep\">youtube.com/watch</a></p>\n",
				"content_text": "Some bombshells about the childcare centres Peter Dutton used to own via trust in here #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=C28OaLMnbgs&si=-XS9tGeEx2Y8R6Ep)\n",
				"date_published": "2025-04-30T04:50:31+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/30/some-bombshells-about-the-childcare.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/29/i-tend-to-agree-with.html",
				
				"content_html": "<p>I tend to agree with most of this.</p>\n<p>#manchesterunited make too many simple mistakes and those mistake lead to goals, and miss too many big chances.</p>\n<p>#manutd #mufc</p>\n<p><a href=\"https://youtube.com/watch?v=dgM5yXd8M3U&amp;si=hyi6AdotFpg7JnI4\">youtube.com/watch</a></p>\n",
				"content_text": "I tend to agree with most of this. \n\n#manchesterunited make too many simple mistakes and those mistake lead to goals, and miss too many big chances. \n\n#manutd #mufc\n\n[youtube.com/watch](https://youtube.com/watch?v=dgM5yXd8M3U&si=hyi6AdotFpg7JnI4)\n",
				"date_published": "2025-04-29T09:10:10+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/29/i-tend-to-agree-with.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/28/what-does-the-kent-beck.html",
				
				"content_html": "<p>What does the Kent Beck, father of #testdrivendevelopment , think about refactoring legacy code?</p>\n<p>Should you tidy it up first?</p>\n<p>I won&rsquo;t spoil the ending.</p>\n<p>#softwareengineering</p>\n<p><a href=\"https://open.spotify.com/episode/6iwE3pfMQIzERBOQcsGOo4?si=ABrcPed4Tf2MGXv2IjV2qA\">open.spotify.com/episode/6&hellip;</a></p>\n",
				"content_text": "What does the Kent Beck, father of #testdrivendevelopment , think about refactoring legacy code? \n\nShould you tidy it up first?\n\nI won't spoil the ending.\n\n#softwareengineering\n\n[open.spotify.com/episode/6...](https://open.spotify.com/episode/6iwE3pfMQIzERBOQcsGOo4?si=ABrcPed4Tf2MGXv2IjV2qA)\n",
				"date_published": "2025-04-28T17:46:18+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/28/what-does-the-kent-beck.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/26/how-to-fix-the-housingcrisis.html",
				
				"content_html": "<p>How to fix the #housingcrisis #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=mqFbOropI7E&amp;si=u6leJUmY06zA4wFI\">youtube.com/watch</a></p>\n",
				"content_text": "How to fix the #housingcrisis #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=mqFbOropI7E&si=u6leJUmY06zA4wFI)\n",
				"date_published": "2025-04-26T08:11:06+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/26/how-to-fix-the-housingcrisis.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/26/i-want-to-live-in.html",
				
				"content_html": "<p>I want to live in Toyota&rsquo;s woven city #robotics #ai #hydrogenpower</p>\n<p><a href=\"https://engineerine.com/toyotas-10b-woven-city/\">engineerine.com/toyotas-1&hellip;</a></p>\n",
				"content_text": "I want to live in Toyota's woven city #robotics #ai #hydrogenpower\n\n[engineerine.com/toyotas-1...](https://engineerine.com/toyotas-10b-woven-city/)\n",
				"date_published": "2025-04-26T07:58:48+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/26/i-want-to-live-in.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/21/some-nice-tactics-boarding-in.html",
				
				"content_html": "<p>Some nice tactics boarding in here #barca #footballtactics #footballanalysis</p>\n<p><a href=\"https://youtube.com/watch?v=rWAA-AbqIRo&amp;si=cXBZgfpTnPTw0Xn_\">youtube.com/watch</a></p>\n",
				"content_text": "Some nice tactics boarding in here #barca #footballtactics #footballanalysis\n\n[youtube.com/watch](https://youtube.com/watch?v=rWAA-AbqIRo&si=cXBZgfpTnPTw0Xn_)\n",
				"date_published": "2025-04-21T09:06:20+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/21/some-nice-tactics-boarding-in.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/21/great-explainer-on-the-chinese.html",
				
				"content_html": "<p>Great explainer on the Chinese economy #china #economics #economicsexplained</p>\n<p><a href=\"https://youtube.com/watch?v=GK4cVoqVQsk&amp;si=P1sW4x2EXpiTcYQO\">youtube.com/watch</a></p>\n",
				"content_text": "Great explainer on the Chinese economy #china #economics #economicsexplained\n\n[youtube.com/watch](https://youtube.com/watch?v=GK4cVoqVQsk&si=P1sW4x2EXpiTcYQO)\n",
				"date_published": "2025-04-21T07:45:56+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/21/great-explainer-on-the-chinese.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/20/last-year-australia-exported-enough.html",
				
				"content_html": "<p>Last year Australia exported enough gas to power 50 million homes for 12 months&hellip;the population of Australia is 27 million, which is 6-7 million 4 person homes ðŸ¤· #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=emlOIagqtds&amp;si=s7T8CjLDqbA8VEo2\">youtube.com/watch</a></p>\n",
				"content_text": "Last year Australia exported enough gas to power 50 million homes for 12 months...the population of Australia is 27 million, which is 6-7 million 4 person homes ðŸ¤· #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=emlOIagqtds&si=s7T8CjLDqbA8VEo2)\n",
				"date_published": "2025-04-20T18:52:16+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/20/last-year-australia-exported-enough.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/19/the-meta-antitrust-case-and.html",
				
				"content_html": "<p>The #meta anti-trust case and an alternative view to #ai2027 are discussed here #ai</p>\n<p><a href=\"https://open.spotify.com/episode/42R3RLEA2sNPLVIu55NV5b?si=ko0XPTLQRDqL5S7TEZQ93A\">open.spotify.com/episode/4&hellip;</a></p>\n",
				"content_text": "The #meta anti-trust case and an alternative view to #ai2027 are discussed here #ai\n\n[open.spotify.com/episode/4...](https://open.spotify.com/episode/42R3RLEA2sNPLVIu55NV5b?si=ko0XPTLQRDqL5S7TEZQ93A)\n",
				"date_published": "2025-04-19T06:42:31+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/19/the-meta-antitrust-case-and.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/15/love-these-economicsexplained-videos-mostly.html",
				
				"content_html": "<p>Love these #economicsexplained videos, mostly facts, very little opinion.</p>\n<p>Australia won the lottery with our resources and we&rsquo;ve just spent the winnings instead of investing in the creation of future revenue streams #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=csaw0f8PKBE&amp;si=SOsahMN1LL1iEqqe\">youtube.com/watch</a></p>\n",
				"content_text": "Love these #economicsexplained videos, mostly facts, very little opinion.\n\nAustralia won the lottery with our resources and we've just spent the winnings instead of investing in the creation of future revenue streams #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=csaw0f8PKBE&si=SOsahMN1LL1iEqqe)\n",
				"date_published": "2025-04-15T06:35:10+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/15/love-these-economicsexplained-videos-mostly.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/11/how-tokyo-solved-a-very.html",
				
				"content_html": "<p>How Tokyo solved a very similar #housingcrisis to what Australian capital cities have now in the 80s #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/48NlYkRWOIPlSQjyPehDAm?si=lSUKcsU6Ro6VYeIj9YGk4g\">open.spotify.com/episode/4&hellip;</a></p>\n",
				"content_text": "How Tokyo solved a very similar #housingcrisis to what Australian capital cities have now in the 80s #auspol\n\n[open.spotify.com/episode/4...](https://open.spotify.com/episode/48NlYkRWOIPlSQjyPehDAm?si=lSUKcsU6Ro6VYeIj9YGk4g)\n",
				"date_published": "2025-04-11T07:48:33+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/11/how-tokyo-solved-a-very.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/09/china-is-the-biggest-holder.html",
				
				"content_html": "<p>#china is the biggest holder of US Treasury #bonds</p>\n<p>What happens if they decide to sell of a heap of them because of #trump #tariffs ?</p>\n<p>#politics</p>\n<p><a href=\"https://youtube.com/watch?v=446HrOb1Gn4&amp;si=3_UKPqJBr2dGCp5Y\">youtube.com/watch</a></p>\n",
				"content_text": "#china is the biggest holder of US Treasury #bonds\n\nWhat happens if they decide to sell of a heap of them because of #trump #tariffs ?\n\n#politics\n\n[youtube.com/watch](https://youtube.com/watch?v=446HrOb1Gn4&si=3_UKPqJBr2dGCp5Y)\n",
				"date_published": "2025-04-09T22:43:06+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/09/china-is-the-biggest-holder.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/09/great-discussion-about-the-history.html",
				
				"content_html": "<p>Great discussion about the history of #psg under Qatari ownership and how #luisenrique has transformed them into one of the favourites to win the #championsleague</p>\n<p><a href=\"https://youtube.com/watch?v=X6GH0eDn7YI&amp;si=N_6i97YPqd1PxW3W\">youtube.com/watch</a></p>\n",
				"content_text": "Great discussion about the history of #psg under Qatari ownership and how #luisenrique has transformed them into one of the favourites to win the #championsleague\n\n[youtube.com/watch](https://youtube.com/watch?v=X6GH0eDn7YI&si=N_6i97YPqd1PxW3W)\n",
				"date_published": "2025-04-09T21:57:06+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/09/great-discussion-about-the-history.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/05/with-directaircapture-you-can-take.html",
				
				"content_html": "<p>With #directaircapture you can take carbon out of the air, convert it to methane, and pump it directly into #gas pipelines&hellip;it&rsquo;s #carbonneutral #energytransition #netzero</p>\n<p><a href=\"https://open.spotify.com/episode/5VmjgmFbKRhAlF4Ro8k2Am?si=U0pS_Md9R5qawPjgxH4K_A\">open.spotify.com/episode/5&hellip;</a></p>\n",
				"content_text": "With #directaircapture you can take carbon out of the air, convert it to methane, and pump it directly into #gas pipelines...it's #carbonneutral #energytransition #netzero\n\n[open.spotify.com/episode/5...](https://open.spotify.com/episode/5VmjgmFbKRhAlF4Ro8k2Am?si=U0pS_Md9R5qawPjgxH4K_A)\n",
				"date_published": "2025-04-06T06:31:51+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/05/with-directaircapture-you-can-take.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/04/years-of-policy-failure-has.html",
				
				"content_html": "<p>30 years of policy failure has led to #aemo, which is so complicated that nobody understands how it works #renewableenergy #netzero</p>\n<p><a href=\"https://youtube.com/watch?v=sH49o2bQ814&amp;si=ABMPuDfWSpqjqkgH\">youtube.com/watch</a></p>\n",
				"content_text": "30 years of policy failure has led to #aemo, which is so complicated that nobody understands how it works #renewableenergy #netzero\n\n[youtube.com/watch](https://youtube.com/watch?v=sH49o2bQ814&si=ABMPuDfWSpqjqkgH)\n",
				"date_published": "2025-04-05T14:11:02+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/04/years-of-policy-failure-has.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/03/i-really-like-the-stats.html",
				
				"content_html": "<p>I really like the stats and analysis of the stats on this podcast episode, especially the part about winning second balls coming back into fashion #premierleague #footballtactics</p>\n<p><a href=\"https://open.spotify.com/episode/5nBNwbx58ay4R5mGXkvKUN?si=SBvEna6RRsG9Jkc5_D6gKw\">open.spotify.com/episode/5&hellip;</a></p>\n",
				"content_text": "I really like the stats and analysis of the stats on this podcast episode, especially the part about winning second balls coming back into fashion #premierleague #footballtactics\n\n[open.spotify.com/episode/5...](https://open.spotify.com/episode/5nBNwbx58ay4R5mGXkvKUN?si=SBvEna6RRsG9Jkc5_D6gKw)\n",
				"date_published": "2025-04-04T11:51:40+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/03/i-really-like-the-stats.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/02/elonmusk-and-tesla-woes-due.html",
				
				"content_html": "<p>#elonmusk and #tesla woes due to their closeness to #trump is not new.</p>\n<p>The Cors family that owns the Cors brewing company experienced a similar backlash for their support for the ultra conservative movement.</p>\n<p><a href=\"https://open.spotify.com/episode/5FJqU8tWPoIq15z8oaZPMw?si=ejBOaWD2TJutv9kftjQK6w\">open.spotify.com/episode/5&hellip;</a></p>\n",
				"content_text": "#elonmusk and #tesla woes due to their closeness to #trump is not new.\n\nThe Cors family that owns the Cors brewing company experienced a similar backlash for their support for the ultra conservative movement.\n\n[open.spotify.com/episode/5...](https://open.spotify.com/episode/5FJqU8tWPoIq15z8oaZPMw?si=ejBOaWD2TJutv9kftjQK6w)\n",
				"date_published": "2025-04-03T08:30:45+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/02/elonmusk-and-tesla-woes-due.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/02/great-fireside-chat-about-the.html",
				
				"content_html": "<p>Great fireside chat about the gas cartel paying no royalties and the downstream effects like not being able to properly fund crucial things like supporting women fleeing domestic violence #auspol #punterspolitics</p>\n<p><a href=\"https://youtube.com/watch?v=ObjpuSeXi70&amp;si=iSYR7MrlKkwUZphV\">youtube.com/watch</a></p>\n",
				"content_text": "Great fireside chat about the gas cartel paying no royalties and the downstream effects like not being able to properly fund crucial things like supporting women fleeing domestic violence #auspol #punterspolitics\n\n[youtube.com/watch](https://youtube.com/watch?v=ObjpuSeXi70&si=iSYR7MrlKkwUZphV)\n",
				"date_published": "2025-04-03T06:20:38+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/02/great-fireside-chat-about-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/02/a-timeline-of-events-that.html",
				
				"content_html": "<p>A timeline of events that led to the cost of living crisis, the people most affected, what did the government try to do to help, and what the future holds #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=mkmLeRxM6yc&amp;si=EXyyMBlP6zK1eUOs\">youtube.com/watch</a></p>\n",
				"content_text": "A timeline of events that led to the cost of living crisis, the people most affected, what did the government try to do to help, and what the future holds #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=mkmLeRxM6yc&si=EXyyMBlP6zK1eUOs)\n",
				"date_published": "2025-04-03T05:37:27+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/02/a-timeline-of-events-that.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/04/01/insightful-discussion-about-the-latest.html",
				
				"content_html": "<p>Insightful discussion about the latest federal budget #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/2KftnQzs1z3gddl7ugyd0D?si=oK1teF1MRhq_qY0cNF6xXQ\">open.spotify.com/episode/2&hellip;</a></p>\n",
				"content_text": "Insightful discussion about the latest federal budget #auspol\n\n[open.spotify.com/episode/2...](https://open.spotify.com/episode/2KftnQzs1z3gddl7ugyd0D?si=oK1teF1MRhq_qY0cNF6xXQ)\n",
				"date_published": "2025-04-02T10:56:30+10:00",
				"url": "https://sajilicious.micro.blog/2025/04/01/insightful-discussion-about-the-latest.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/30/why-brighton-are-the-best.html",
				
				"content_html": "<p>Why Brighton are the best run club in the #premierleague</p>\n<p><a href=\"https://youtube.com/watch?v=uVOPbGU-gGE&amp;si=uu3VQLjfrIS24MbG\">youtube.com/watch</a></p>\n",
				"content_text": "Why Brighton are the best run club in the #premierleague\n\n[youtube.com/watch](https://youtube.com/watch?v=uVOPbGU-gGE&si=uu3VQLjfrIS24MbG)\n",
				"date_published": "2025-03-31T12:29:14+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/30/why-brighton-are-the-best.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/30/manchesterunited-are-so-far-behind.html",
				
				"content_html": "<p>#manchesterunited are so far behind Liverpool when it comes to injury prevention via medical science #manutd #mufc</p>\n<p><a href=\"https://youtube.com/watch?v=_0AbMhsAztQ&amp;si=d_GXBILQXI1dGnj1\">youtube.com/watch</a></p>\n",
				"content_text": "#manchesterunited are so far behind Liverpool when it comes to injury prevention via medical science #manutd #mufc\n\n[youtube.com/watch](https://youtube.com/watch?v=_0AbMhsAztQ&si=d_GXBILQXI1dGnj1)\n",
				"date_published": "2025-03-31T07:23:44+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/30/manchesterunited-are-so-far-behind.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/30/i-dont-recall-all-of.html",
				
				"content_html": "<p>I don&rsquo;t recall all of these myself and some don&rsquo;t seem specific to Mr Taylor, but wow! #auspol</p>\n<!-- raw HTML omitted -->\n",
				"content_text": "I don't recall all of these myself and some don't seem specific to Mr Taylor, but wow! #auspol\n\n<img src=\"uploads/2025/image-from-ios.jpg\" width=\"600\" height=\"450\" alt=\"\">\n",
				"date_published": "2025-03-31T05:03:58+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/30/i-dont-recall-all-of.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/28/buy-neometals-nmt-on-the.html",
				
				"content_html": "<p>Buy Neometals (NMT on the ASX) because they have an 85% recovery rate when recycling lithium batteries (traditional smelting method would struggle to get 50% with much more emissions) #greeneconomy #netzero</p>\n<p><a href=\"https://open.spotify.com/episode/1b28B9Qp4QXdAylLNauyLO?si=PhbrJoOmSLC2Dowi7SGP0g\">open.spotify.com/episode/1&hellip;</a></p>\n",
				"content_text": "Buy Neometals (NMT on the ASX) because they have an 85% recovery rate when recycling lithium batteries (traditional smelting method would struggle to get 50% with much more emissions) #greeneconomy #netzero\n\n[open.spotify.com/episode/1...](https://open.spotify.com/episode/1b28B9Qp4QXdAylLNauyLO?si=PhbrJoOmSLC2Dowi7SGP0g)\n",
				"date_published": "2025-03-29T07:48:20+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/28/buy-neometals-nmt-on-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/27/manchesterunited-are-so-far-behind.html",
				
				"content_html": "<p>#manchesterunited are so far behind when it comes to #footballanalytics ðŸ˜¢</p>\n<p>#manutd #mufc</p>\n<p><a href=\"https://youtube.com/watch?v=7Qn7pIFcqjg&amp;si=s1duqZZfHqhYN-W_\">youtube.com/watch</a></p>\n",
				"content_text": "#manchesterunited are so far behind when it comes to #footballanalytics ðŸ˜¢ \n\n#manutd #mufc\n\n[youtube.com/watch](https://youtube.com/watch?v=7Qn7pIFcqjg&si=s1duqZZfHqhYN-W_)\n",
				"date_published": "2025-03-28T08:14:32+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/27/manchesterunited-are-so-far-behind.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/26/creating-energy-from-oat-waste.html",
				
				"content_html": "<p>Creating energy from oat waste #energytransition #renewableenergy</p>\n<p><a href=\"https://open.spotify.com/episode/1a7VzOhmR0y1Lf8PLpEzW6?si=iFmZm8-yRoyTTTI43-zpAA\">open.spotify.com/episode/1&hellip;</a></p>\n",
				"content_text": "Creating energy from oat waste #energytransition #renewableenergy\n\n[open.spotify.com/episode/1...](https://open.spotify.com/episode/1a7VzOhmR0y1Lf8PLpEzW6?si=iFmZm8-yRoyTTTI43-zpAA)\n",
				"date_published": "2025-03-27T16:17:22+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/26/creating-energy-from-oat-waste.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/26/this-is-how-i-think.html",
				
				"content_html": "<p>This is how I think you should deal with data that needs to come from databases owned by different services #microservices #eventdrivenarchitecture #dotnet</p>\n<p><a href=\"https://youtube.com/watch?v=EUWqaa86bOg&amp;si=z472QLKoEdTb7Wwt\">youtube.com/watch</a></p>\n",
				"content_text": "This is how I think you should deal with data that needs to come from databases owned by different services #microservices #eventdrivenarchitecture #dotnet\n\n[youtube.com/watch](https://youtube.com/watch?v=EUWqaa86bOg&si=z472QLKoEdTb7Wwt)\n",
				"date_published": "2025-03-27T08:24:42+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/26/this-is-how-i-think.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/26/part-of-looking-into-multiclub.html",
				
				"content_html": "<p>Part 3 of 3 looking into multi-club ownership, which is an analysis of what was discussed in the interviews in the first two parts #premierleague #championsleague</p>\n<p><a href=\"https://youtube.com/watch?v=cyilTKqUJLc&amp;si=icftC8c3PRGpa7_H\">youtube.com/watch</a></p>\n",
				"content_text": "Part 3 of 3 looking into multi-club ownership, which is an analysis of what was discussed in the interviews in the first two parts #premierleague #championsleague\n\n[youtube.com/watch](https://youtube.com/watch?v=cyilTKqUJLc&si=icftC8c3PRGpa7_H)\n",
				"date_published": "2025-03-27T07:57:19+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/26/part-of-looking-into-multiclub.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/26/part-of-on-multiclub-ownership.html",
				
				"content_html": "<p>Part 2 of 3 on multi-club ownership.</p>\n<p>They chat to people involved with Bournemouth and LAFC (own several clubs and have a strategic partnership with Bayern).</p>\n<p>#premierleague #championsleague</p>\n<p><a href=\"https://youtube.com/watch?v=h8UehxlSYws&amp;si=Fm7BW33NW--rQrVO\">youtube.com/watch</a></p>\n",
				"content_text": "Part 2 of 3 on multi-club ownership.\n\nThey chat to people involved with Bournemouth and LAFC (own several clubs and have a strategic partnership with Bayern).\n\n#premierleague #championsleague\n\n[youtube.com/watch](https://youtube.com/watch?v=h8UehxlSYws&si=Fm7BW33NW--rQrVO)\n",
				"date_published": "2025-03-27T07:56:33+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/26/part-of-on-multiclub-ownership.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/26/independent-senators-talking-how-the.html",
				
				"content_html": "<p>Independent senators talking how the #gascartel short-changes Australians and how the federal government allows them to do so #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=YdN6vbFurRs&amp;si=kQEkfx0rHw0yHQkf\">youtube.com/watch</a></p>\n",
				"content_text": "Independent senators talking how the #gascartel short-changes Australians and how the federal government allows them to do so #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=YdN6vbFurRs&si=kQEkfx0rHw0yHQkf)\n",
				"date_published": "2025-03-27T06:13:26+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/26/independent-senators-talking-how-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/25/part-of-of-theathleticfc-looking.html",
				
				"content_html": "<p>Part 1 of 3 of #theathleticfc looking into multi-club ownership #premierleague #championsleague</p>\n<p><a href=\"https://youtube.com/watch?v=CI46vQxT5vQ&amp;si=bY64wF853rnPBiNG\">youtube.com/watch</a></p>\n",
				"content_text": "Part 1 of 3 of #theathleticfc looking into multi-club ownership #premierleague #championsleague\n\n[youtube.com/watch](https://youtube.com/watch?v=CI46vQxT5vQ&si=bY64wF853rnPBiNG)\n",
				"date_published": "2025-03-26T12:15:57+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/25/part-of-of-theathleticfc-looking.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/25/most-gas-companies-pay-is.html",
				
				"content_html": "<p>Most gas companies pay $0 is tax each year #auspol #gascartel #punterspolitics</p>\n<p><a href=\"https://youtube.com/watch?v=CI46vQxT5vQ&amp;si=bY64wF853rnPBiNG\">youtube.com/watch</a></p>\n",
				"content_text": "Most gas companies pay $0 is tax each year #auspol #gascartel #punterspolitics\n\n[youtube.com/watch](https://youtube.com/watch?v=CI46vQxT5vQ&si=bY64wF853rnPBiNG)\n",
				"date_published": "2025-03-26T10:23:56+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/25/most-gas-companies-pay-is.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/25/161631.html",
				
				"content_html": "<p><a href=\"https://youtube.com/watch?v=8-FqY1q60EQ&amp;si=RPW5VPAq_LPyxyZr\">youtube.com/watch</a></p>\n<p>With debt at 117% of GDP, can the US government pay its bills, so to speak? #doge #musk #trump #politics</p>\n",
				"content_text": "[youtube.com/watch](https://youtube.com/watch?v=8-FqY1q60EQ&si=RPW5VPAq_LPyxyZr)\n\nWith debt at 117% of GDP, can the US government pay its bills, so to speak? #doge #musk #trump #politics\n",
				"date_published": "2025-03-26T10:16:31+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/25/161631.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/24/bhp-have-a-sludge-dam.html",
				
				"content_html": "<p>BHP have a sludge dam in Western Australia where the magnesium-oxide from their nickel mine sucks carbon out the air and doesn&rsquo;t leak, unlike trees when they cut down #climatechange #carbonstorage #netzero</p>\n<p><a href=\"https://open.spotify.com/episode/7D9FG3L5JSjApahNE9RQ3k?si=yqxcnZALQiaXza94k1TN9A\">open.spotify.com/episode/7&hellip;</a></p>\n",
				"content_text": "BHP have a sludge dam in Western Australia where the magnesium-oxide from their nickel mine sucks carbon out the air and doesn't leak, unlike trees when they cut down #climatechange #carbonstorage #netzero\n\n[open.spotify.com/episode/7...](https://open.spotify.com/episode/7D9FG3L5JSjApahNE9RQ3k?si=yqxcnZALQiaXza94k1TN9A)\n",
				"date_published": "2025-03-25T07:53:25+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/24/bhp-have-a-sludge-dam.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/22/github-copilot-workspace-sounds-pretty.html",
				
				"content_html": "<p>Github Copilot Workspace sounds pretty awesome.</p>\n<p>I love the idea of documenting a new feature in a Github Issue and then having Copilot come up with a implementation plan and then implementation after you approve the plan.</p>\n<p>#copilot #github #ai #llm</p>\n<p><a href=\"https://githubnext.com/projects/copilot-workspace\">githubnext.com/projects/&hellip;</a></p>\n",
				"content_text": "Github Copilot Workspace sounds pretty awesome.\n\nI love the idea of documenting a new feature in a Github Issue and then having Copilot come up with a implementation plan and then implementation after you approve the plan.\n\n#copilot #github #ai #llm\n\n[githubnext.com/projects/...](https://githubnext.com/projects/copilot-workspace)\n",
				"date_published": "2025-03-23T08:59:56+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/22/github-copilot-workspace-sounds-pretty.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/22/great-interview-in-the-second.html",
				
				"content_html": "<p>Great interview in the second segment with the Columbia student that created an AI assistant to help job applicants pass lite-coding interview questions #ai #llm #copilot #hardfork</p>\n<p><a href=\"https://open.spotify.com/episode/1AYejKpHXVu1SOLQU0NX08?si=G9Tkzol9Rv-3yetOAqwbgw\">open.spotify.com/episode/1&hellip;</a></p>\n",
				"content_text": "Great interview in the second segment with the Columbia student that created an AI assistant to help job applicants pass lite-coding interview questions #ai #llm #copilot #hardfork\n\n[open.spotify.com/episode/1...](https://open.spotify.com/episode/1AYejKpHXVu1SOLQU0NX08?si=G9Tkzol9Rv-3yetOAqwbgw)\n",
				"date_published": "2025-03-23T07:17:28+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/22/great-interview-in-the-second.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/22/statistical-analysis-on-whos-the.html",
				
				"content_html": "<p>Statistical analysis on who&rsquo;s the best manager in the #premierleague</p>\n<p><a href=\"https://youtube.com/watch?v=9hEIPLu8QKs&amp;si=H-2E5Yy8wtRa6F71\">youtube.com/watch</a></p>\n",
				"content_text": "Statistical analysis on who's the best manager in the #premierleague\n\n[youtube.com/watch](https://youtube.com/watch?v=9hEIPLu8QKs&si=H-2E5Yy8wtRa6F71)\n",
				"date_published": "2025-03-23T04:46:18+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/22/statistical-analysis-on-whos-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/19/some-great-perspectives-on-budget.html",
				
				"content_html": "<p>Some great perspectives on budget surpluses and deficita in here #ausp</p>\n<p><a href=\"https://open.spotify.com/episode/5GTBXufK8ZGFzCoJSqHdBM?si=Yi3mnLRPQOS8e90ifLjAEQ\">open.spotify.com/episode/5&hellip;</a></p>\n",
				"content_text": "Some great perspectives on budget surpluses and deficita in here #ausp\n\n[open.spotify.com/episode/5...](https://open.spotify.com/episode/5GTBXufK8ZGFzCoJSqHdBM?si=Yi3mnLRPQOS8e90ifLjAEQ)\n",
				"date_published": "2025-03-20T15:30:56+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/19/some-great-perspectives-on-budget.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/19/the-most-interesting-stat-i.html",
				
				"content_html": "<p>The most interesting stat I took from this is Australian &ldquo;lads&rdquo; (males 18-35) are bigger supporters of Dutton than male boomers #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/56HGzLepv10zHVUyv4rQzh?si=7ef2p1TnT22sXROUXF2z9g\">open.spotify.com/episode/5&hellip;</a></p>\n",
				"content_text": "The most interesting stat I took from this is Australian \"lads\" (males 18-35) are bigger supporters of Dutton than male boomers #auspol\n\n[open.spotify.com/episode/5...](https://open.spotify.com/episode/56HGzLepv10zHVUyv4rQzh?si=7ef2p1TnT22sXROUXF2z9g)\n",
				"date_published": "2025-03-20T08:22:20+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/19/the-most-interesting-stat-i.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/18/insightful-chat-with-simon-holmes.html",
				
				"content_html": "<p>Insightful chat with Simon Holmes Ã  Court about the #climate200 movement and how it works #auspol #punterspolitics</p>\n<p><a href=\"https://open.spotify.com/episode/3WSYY5GUZjT8WuQxkxEEow?si=JeI_lZAsQTKRXtVqKXw5Rw\">open.spotify.com/episode/3&hellip;</a></p>\n",
				"content_text": "Insightful chat with Simon Holmes Ã  Court about the #climate200 movement and how it works #auspol #punterspolitics\n\n[open.spotify.com/episode/3...](https://open.spotify.com/episode/3WSYY5GUZjT8WuQxkxEEow?si=JeI_lZAsQTKRXtVqKXw5Rw)\n",
				"date_published": "2025-03-19T12:41:50+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/18/insightful-chat-with-simon-holmes.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/17/great-policy-ideas-here-but.html",
				
				"content_html": "<p>Great policy ideas here, but I don&rsquo;t see either major party doing most as they&rsquo;re not all popular and get put into the &ldquo;too hard&rdquo; basket.</p>\n<p>Hopefully cross-benchers ask for them if we get a minority gov #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/72zzBchl3xxaE5XUN6ONwb?si=TmTHOzPOSDKstiZe-cCxVw\">open.spotify.com/episode/7&hellip;</a></p>\n",
				"content_text": "Great policy ideas here, but I don't see either major party doing most as they're not all popular and get put into the \"too hard\" basket.\n\nHopefully cross-benchers ask for them if we get a minority gov #auspol\n\n[open.spotify.com/episode/7...](https://open.spotify.com/episode/72zzBchl3xxaE5XUN6ONwb?si=TmTHOzPOSDKstiZe-cCxVw)\n",
				"date_published": "2025-03-18T06:17:16+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/17/great-policy-ideas-here-but.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/15/some-of-the-conflict-of.html",
				
				"content_html": "<p>Some of the conflict of interests various politicians have in their investments, but have not received any punishment despite breaching the ministerial code of conduct #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=sf2QG4MUS7Y&amp;si=HEIJCxbT3PBZvEjl\">youtube.com/watch</a></p>\n",
				"content_text": "Some of the conflict of interests various politicians have in their investments, but have not received any punishment despite breaching the ministerial code of conduct #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=sf2QG4MUS7Y&si=HEIJCxbT3PBZvEjl)\n",
				"date_published": "2025-03-16T05:50:39+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/15/some-of-the-conflict-of.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/13/some-good-tactical-points-here.html",
				
				"content_html": "<p>Some good tactical points here.</p>\n<p>I was on the PSG bandwagon before the game, so I&rsquo;m definitely tipping them to win now.</p>\n<p>#championsleague #footballtactics</p>\n<p><a href=\"https://open.spotify.com/episode/71MpzO38LVrI2vkZHmjJxU?si=q1Ly7uMoSkG-hwKWkW6J3g\">open.spotify.com/episode/7&hellip;</a></p>\n",
				"content_text": "Some good tactical points here. \n\nI was on the PSG bandwagon before the game, so I'm definitely tipping them to win now.\n\n#championsleague #footballtactics\n\n[open.spotify.com/episode/7...](https://open.spotify.com/episode/71MpzO38LVrI2vkZHmjJxU?si=q1Ly7uMoSkG-hwKWkW6J3g)\n",
				"date_published": "2025-03-14T12:28:50+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/13/some-good-tactical-points-here.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/13/you-still-wouldnt-have-enough.html",
				
				"content_html": "<p>You still wouldn&rsquo;t have enough for a 20% deposit in most capital cities if in 2014 got a job that put you in the top 80% of earners and saved 15% of your salary for 10 years at the average interest rate #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/0zPQxevWQQb1ejbZhH72Sy?si=47tY-2DAQsiF9jBwmWayMA\">open.spotify.com/episode/0&hellip;</a></p>\n",
				"content_text": "You still wouldn't have enough for a 20% deposit in most capital cities if in 2014 got a job that put you in the top 80% of earners and saved 15% of your salary for 10 years at the average interest rate #auspol\n\n[open.spotify.com/episode/0...](https://open.spotify.com/episode/0zPQxevWQQb1ejbZhH72Sy?si=47tY-2DAQsiF9jBwmWayMA)\n",
				"date_published": "2025-03-14T11:49:11+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/13/you-still-wouldnt-have-enough.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/12/i-enjoyed-the-history-lesson.html",
				
				"content_html": "<p>I enjoyed the history lesson on the start of the Cold War in this podcast episode, and how it relates to #trump and #putin today</p>\n<p><a href=\"https://open.spotify.com/episode/0JDHJSoQmwqB5Qc6MOxK0D?si=6QKrOQVaRlOv_Jfm3kP8CQ\">open.spotify.com/episode/0&hellip;</a></p>\n",
				"content_text": "I enjoyed the history lesson on the start of the Cold War in this podcast episode, and how it relates to #trump and #putin today\n\n[open.spotify.com/episode/0...](https://open.spotify.com/episode/0JDHJSoQmwqB5Qc6MOxK0D?si=6QKrOQVaRlOv_Jfm3kP8CQ)\n",
				"date_published": "2025-03-13T17:30:35+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/12/i-enjoyed-the-history-lesson.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/12/love-this-track-trance-trancefamily.html",
				
				"content_html": "<p>Love this track #trance #trancefamily</p>\n<p><a href=\"https://open.spotify.com/track/0I8EHyU8Z8Zmo3VqfEzhcL?si=e5_A0LWIRhK4qReKbObysw\">open.spotify.com/track/0I8&hellip;</a></p>\n",
				"content_text": "Love this track #trance #trancefamily\n\n[open.spotify.com/track/0I8...](https://open.spotify.com/track/0I8EHyU8Z8Zmo3VqfEzhcL?si=e5_A0LWIRhK4qReKbObysw)\n",
				"date_published": "2025-03-13T05:50:00+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/12/love-this-track-trance-trancefamily.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/12/fireside-chat-with-david-pocock.html",
				
				"content_html": "<p>Fireside chat with David Pocock and Tony Windsor about minority government #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/0CtO8rqqXhBWBQdCsygvNO?si=gedk-ifpSeiNeFGVcvHAlQ\">open.spotify.com/episode/0&hellip;</a></p>\n",
				"content_text": "Fireside chat with David Pocock and Tony Windsor about minority government #auspol\n\n[open.spotify.com/episode/0...](https://open.spotify.com/episode/0CtO8rqqXhBWBQdCsygvNO?si=gedk-ifpSeiNeFGVcvHAlQ)\n",
				"date_published": "2025-03-13T04:40:06+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/12/fireside-chat-with-david-pocock.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/11/good-chat-with-max-chandlermather.html",
				
				"content_html": "<p>Good chat with Max Chandler-Mather about #thegreens policies.</p>\n<p>A rare politician that walks the walk, not just talking.</p>\n<p>Gives away part of his salary to help out needy folks in his electorate #auspol</p>\n<p><a href=\"https://open.spotify.com/episode/42LDhBD23gIIgE88g50jPb?si=gSfmUIRAQYeuYG-1rstf-w\">open.spotify.com/episode/4&hellip;</a></p>\n",
				"content_text": "Good chat with Max Chandler-Mather about #thegreens policies.\n\nA rare politician that walks the walk, not just talking.\n\nGives away part of his salary to help out needy folks in his electorate #auspol\n\n[open.spotify.com/episode/4...](https://open.spotify.com/episode/42LDhBD23gIIgE88g50jPb?si=gSfmUIRAQYeuYG-1rstf-w)\n",
				"date_published": "2025-03-12T15:15:04+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/11/good-chat-with-max-chandlermather.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/11/the-brics-counties-saudi-arabia.html",
				
				"content_html": "<p>The BRICS counties: Saudi Arabia, Egypt, Iran, Ethiopia, Indonesia and Brazil have the size and resources to have a much bigger influence on the world, bit will it ever happen? #economics #economisexplained</p>\n<p><a href=\"https://youtube.com/watch?v=HrgQxpxh1m8&amp;si=CerepPQNmaPE-6FE\">youtube.com/watch</a></p>\n",
				"content_text": "The BRICS counties: Saudi Arabia, Egypt, Iran, Ethiopia, Indonesia and Brazil have the size and resources to have a much bigger influence on the world, bit will it ever happen? #economics #economisexplained\n\n[youtube.com/watch](https://youtube.com/watch?v=HrgQxpxh1m8&si=CerepPQNmaPE-6FE)\n",
				"date_published": "2025-03-12T06:03:03+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/11/the-brics-counties-saudi-arabia.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/11/so-oldtrafford-will-become-newtrafford.html",
				
				"content_html": "<p>So #oldtrafford will become #newtrafford (more likely the Ineos Arena).</p>\n<p>I would have preferred a refurbishment similar to what FSG has done with Anfield, but it appears they want to sell the land around to fund it #manutd #mufc</p>\n<p><a href=\"https://youtube.com/watch?v=gC7KmGvRLkA&amp;si=Dr4A3r540BAAZ68N\">youtube.com/watch</a></p>\n",
				"content_text": "So #oldtrafford will become #newtrafford (more likely the Ineos Arena).\n\nI would have preferred a refurbishment similar to what FSG has done with Anfield, but it appears they want to sell the land around to fund it #manutd #mufc\n\n[youtube.com/watch](https://youtube.com/watch?v=gC7KmGvRLkA&si=Dr4A3r540BAAZ68N)\n",
				"date_published": "2025-03-12T05:40:20+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/11/so-oldtrafford-will-become-newtrafford.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/11/the-socalled-recent-biggest-terrorist.html",
				
				"content_html": "<p>The so-called recent biggest terrorist plot in Australia&rsquo;s history was a hoax #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=8VdN1tyDyhg&amp;si=VRdSyN3tPHmOn6D5\">youtube.com/watch</a></p>\n",
				"content_text": "The so-called recent biggest terrorist plot in Australia's history was a hoax #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=8VdN1tyDyhg&si=VRdSyN3tPHmOn6D5)\n",
				"date_published": "2025-03-12T05:08:04+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/11/the-socalled-recent-biggest-terrorist.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/11/why-you-cant-tax-the.html",
				
				"content_html": "<p>Why you can&rsquo;t tax the resource companies in Australia and win.</p>\n<p>TL;DR they&rsquo;ve got deep pockets are will run attack campaigns against you #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=9oSEO8JxS8s&amp;si=Nal7j6LrSbKYWTLk\">youtube.com/watch</a></p>\n",
				"content_text": "Why you can't tax the resource companies in Australia and win. \n\nTL;DR they've got deep pockets are will run attack campaigns against you #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=9oSEO8JxS8s&si=Nal7j6LrSbKYWTLk)\n",
				"date_published": "2025-03-12T04:54:19+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/11/why-you-cant-tax-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/11/remote-filexplorer-in-visualstudio-for.html",
				
				"content_html": "<p>Remote #filexplorer in #visualstudio for viewing #linux file systems</p>\n<p><a href=\"https://youtube.com/watch?v=WxsedgP4T0Q&amp;si=oKBY9MF4khRk99c7\">youtube.com/watch</a></p>\n",
				"content_text": "Remote #filexplorer in #visualstudio for viewing #linux file systems \n\n[youtube.com/watch](https://youtube.com/watch?v=WxsedgP4T0Q&si=oKBY9MF4khRk99c7)\n",
				"date_published": "2025-03-12T04:32:36+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/11/remote-filexplorer-in-visualstudio-for.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/10/video-about-the-players-in.html",
				
				"content_html": "<p>Video about the players in the #manchesterunited U18s that could one day be first team players (includes footage from the FA Youth Cup, not just whiteboarding) #manutd #mufc</p>\n<p><a href=\"https://youtube.com/watch?v=0MwOYUVcPi0&amp;si=JIdBGdo92kG07S8Z\">youtube.com/watch</a></p>\n",
				"content_text": "Video about the players in the #manchesterunited U18s that could one day be first team players (includes footage from the FA Youth Cup, not just whiteboarding) #manutd #mufc\n\n[youtube.com/watch](https://youtube.com/watch?v=0MwOYUVcPi0&si=JIdBGdo92kG07S8Z)\n",
				"date_published": "2025-03-11T08:02:22+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/10/video-about-the-players-in.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/10/great-explanation-with-whiteboarding-and.html",
				
				"content_html": "<p>Great explanation, with whiteboarding and stats, on why #psg are a better team without #mbappe #footballtactics #championsleague</p>\n<p><a href=\"https://youtube.com/watch?v=1ndelpDVplI&amp;si=XhXSq6leJ_FFNaEl\">youtube.com/watch</a></p>\n",
				"content_text": "Great explanation, with whiteboarding and stats, on why #psg are a better team without #mbappe #footballtactics #championsleague\n\n[youtube.com/watch](https://youtube.com/watch?v=1ndelpDVplI&si=XhXSq6leJ_FFNaEl)\n",
				"date_published": "2025-03-11T07:52:46+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/10/great-explanation-with-whiteboarding-and.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/10/this-is-a-great-videostats.html",
				
				"content_html": "<p>This is a great video&hellip;stats, whiteboarding etc #theathleticfc #premierleague</p>\n<p><a href=\"https://youtube.com/watch?v=owrS8G3PZUQ&amp;si=5T7zkQTpMi14t8E3\">youtube.com/watch</a></p>\n",
				"content_text": "This is a great video...stats, whiteboarding etc #theathleticfc #premierleague\n\n[youtube.com/watch](https://youtube.com/watch?v=owrS8G3PZUQ&si=5T7zkQTpMi14t8E3)\n",
				"date_published": "2025-03-11T07:16:51+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/10/this-is-a-great-videostats.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/09/love-the-irony-that-lib.html",
				
				"content_html": "<p>Love the irony that Lib that&rsquo;ll be in charge of government waste is under investigation for 14 breaches use of public money #auspol ðŸ˜‚</p>\n<p><a href=\"https://youtube.com/watch?v=D7Qhz37jluA&amp;si=ESQVZqS3ejizWmrD\">youtube.com/watch</a></p>\n",
				"content_text": "Love the irony that Lib that'll be in charge of government waste is under investigation for 14 breaches use of public money #auspol ðŸ˜‚\n\n[youtube.com/watch](https://youtube.com/watch?v=D7Qhz37jluA&si=ESQVZqS3ejizWmrD)\n",
				"date_published": "2025-03-10T07:02:36+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/09/love-the-irony-that-lib.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/08/this-is-all-pretty-obvious.html",
				
				"content_html": "<p>This is all pretty obvious, but some good discussion points on reworking the wage structure at #manchesterunited #manutd #mufc #glazersout</p>\n<p><a href=\"https://youtu.be/GcIXkpUTGLw?si=My-mUFmdnVlK3Hr9\">youtu.be/GcIXkpUTG&hellip;</a></p>\n",
				"content_text": "This is all pretty obvious, but some good discussion points on reworking the wage structure at #manchesterunited #manutd #mufc #glazersout\n\n[youtu.be/GcIXkpUTG...](https://youtu.be/GcIXkpUTGLw?si=My-mUFmdnVlK3Hr9)\n",
				"date_published": "2025-03-09T03:08:31+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/08/this-is-all-pretty-obvious.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/08/great-video-on-why-amorims.html",
				
				"content_html": "<p>Great video on why Amorim&rsquo;s system isn&rsquo;t working on #manchesterunited</p>\n<p>It&rsquo;s a lack of running and dribbling ability #mufc #manutd #amorim</p>\n<p><a href=\"https://youtube.com/watch?v=dYd2TkW_b-g&amp;si=i3uMo4owg7I2TtL8\">youtube.com/watch</a></p>\n",
				"content_text": "Great video on why Amorim's system isn't working on #manchesterunited\n\nIt's a lack of running and dribbling ability #mufc #manutd #amorim\n\n[youtube.com/watch](https://youtube.com/watch?v=dYd2TkW_b-g&si=i3uMo4owg7I2TtL8)\n",
				"date_published": "2025-03-09T02:34:32+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/08/great-video-on-why-amorims.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/08/great-explainer-on-why-a.html",
				
				"content_html": "<p>Great explainer on why a tropical cyclone has come down past the tropics #lanina #climatechange</p>\n<p><a href=\"https://youtube.com/watch?v=YVD60z6nqco&amp;si=jPAFbLJaKkZiTamj\">youtube.com/watch</a></p>\n",
				"content_text": "Great explainer on why a tropical cyclone has come down past the tropics #lanina #climatechange\n\n[youtube.com/watch](https://youtube.com/watch?v=YVD60z6nqco&si=jPAFbLJaKkZiTamj)\n",
				"date_published": "2025-03-09T01:45:29+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/08/great-explainer-on-why-a.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/08/some-excellent-points-about-the.html",
				
				"content_html": "<p>Some excellent points about the voting records of the &ldquo;teal independents&rdquo;.</p>\n<p>Most are vote with the Liberals except on climate policy.</p>\n<p>But, they are looking out for the interests of their electorates #auspol #climate200</p>\n<p><a href=\"https://youtube.com/watch?v=j0gctvGLpVg&amp;si=yb1YoqSDg_eM0mpM\">youtube.com/watch</a></p>\n",
				"content_text": "Some excellent points about the voting records of the \"teal independents\".\n\nMost are vote with the Liberals except on climate policy.\n\nBut, they are looking out for the interests of their electorates #auspol #climate200\n\n[youtube.com/watch](https://youtube.com/watch?v=j0gctvGLpVg&si=yb1YoqSDg_eM0mpM)\n",
				"date_published": "2025-03-09T01:38:15+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/08/some-excellent-points-about-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/07/good-chats-about-google-ai.html",
				
				"content_html": "<p>Good chats about Google AI Search and Trump&rsquo;s crypto reserve idea #google #crypto #hardfork #trump</p>\n<p><a href=\"https://open.spotify.com/episode/7vvzQz2VT673u0TaSZBbg8?si=iNalXEBmS022UHXAf7aheA\">open.spotify.com/episode/7&hellip;</a></p>\n",
				"content_text": "Good chats about Google AI Search and Trump's crypto reserve idea #google #crypto #hardfork #trump\n\n[open.spotify.com/episode/7...](https://open.spotify.com/episode/7vvzQz2VT673u0TaSZBbg8?si=iNalXEBmS022UHXAf7aheA)\n",
				"date_published": "2025-03-08T06:34:35+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/07/good-chats-about-google-ai.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/07/informative-podcast-episode-on-the.html",
				
				"content_html": "<p>Informative podcast episode on the justice department operated in Trump&rsquo;s first term and the differences with how it&rsquo;s operating now #trump</p>\n<p><a href=\"https://open.spotify.com/episode/6Ka9Ctt5vPeucdX5m7Dvoz?si=L4FipoKDRoaXQCQZy8fa-w\">open.spotify.com/episode/6&hellip;</a></p>\n",
				"content_text": "Informative podcast episode on the justice department operated in Trump's first term and the differences with how it's operating now #trump\n\n[open.spotify.com/episode/6...](https://open.spotify.com/episode/6Ka9Ctt5vPeucdX5m7Dvoz?si=L4FipoKDRoaXQCQZy8fa-w)\n",
				"date_published": "2025-03-08T05:01:46+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/07/informative-podcast-episode-on-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/05/gas-companies-are-paying-almost.html",
				
				"content_html": "<p>Gas companies are paying almost $0 in resource rent tax despite making billions #auspol</p>\n<p><a href=\"https://youtube.com/watch?v=6Z7hUkcnN_k&amp;si=HkTHbeR4M0mUfkS7\">youtube.com/watch</a></p>\n",
				"content_text": "Gas companies are paying almost $0 in resource rent tax despite making billions #auspol\n\n[youtube.com/watch](https://youtube.com/watch?v=6Z7hUkcnN_k&si=HkTHbeR4M0mUfkS7)\n",
				"date_published": "2025-03-06T17:13:14+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/05/gas-companies-are-paying-almost.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/05/informative-podcast-episode-about-the.html",
				
				"content_html": "<p>Informative podcast episode about the sporting structure at #manchesterunited #manutd #mufc #talkofthedevils</p>\n<p><a href=\"https://open.spotify.com/episode/2paY4TNmK7yvcmvHrL0cJL?si=1cM_xkhsTfOUoG6mcAR5uw&amp;context=spotify%3Ashow%3A7bQPR7elzVt4UjfH6E25GH\">open.spotify.com/episode/2&hellip;</a></p>\n",
				"content_text": "Informative podcast episode about the sporting structure at #manchesterunited #manutd #mufc #talkofthedevils\n\n[open.spotify.com/episode/2...](https://open.spotify.com/episode/2paY4TNmK7yvcmvHrL0cJL?si=1cM_xkhsTfOUoG6mcAR5uw&context=spotify%3Ashow%3A7bQPR7elzVt4UjfH6E25GH)\n",
				"date_published": "2025-03-06T06:52:28+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/05/informative-podcast-episode-about-the.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/04/the-interview-with-the-ceo.html",
				
				"content_html": "<p>The interview with the CEO of #anthropic was quite interesting #ai #artificialintelligence #llms #largelanguagemodels</p>\n<p><a href=\"https://youtube.com/watch?v=YhGUSIvsn_Y&amp;si=Zg3H-CcRDvCI2c9f\">youtube.com/watch</a></p>\n",
				"content_text": "The interview with the CEO of #anthropic was quite interesting #ai #artificialintelligence #llms #largelanguagemodels\n\n[youtube.com/watch](https://youtube.com/watch?v=YhGUSIvsn_Y&si=Zg3H-CcRDvCI2c9f)\n",
				"date_published": "2025-03-05T13:22:07+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/04/the-interview-with-the-ceo.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/04/totally-agree-with-this-all.html",
				
				"content_html": "<p>Totally agree with this; all #manchesterunited success has been built on youth from the Busby Babes to Fergie&rsquo;s Fledglings #manutd #mufc</p>\n<p><a href=\"https://youtube.com/watch?v=7Z7G3YiWY7E&amp;si=pe3c9ZeZ7NAMkO91\">youtube.com/watch</a></p>\n",
				"content_text": "Totally agree with this; all #manchesterunited success has been built on youth from the Busby Babes to Fergie's Fledglings #manutd #mufc\n\n[youtube.com/watch](https://youtube.com/watch?v=7Z7G3YiWY7E&si=pe3c9ZeZ7NAMkO91)\n",
				"date_published": "2025-03-05T05:55:16+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/04/totally-agree-with-this-all.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/03/never-gets-old-trance-trancefamily.html",
				
				"content_html": "<p>Never gets old #trance #trancefamily</p>\n<p><a href=\"https://open.spotify.com/track/7tU5JvCfG0t3PHG7mchPjv?si=I5pd56Z-QB2x8BAdwJs2_A\">open.spotify.com/track/7tU&hellip;</a></p>\n",
				"content_text": "Never gets old #trance #trancefamily\n\n[open.spotify.com/track/7tU...](https://open.spotify.com/track/7tU5JvCfG0t3PHG7mchPjv?si=I5pd56Z-QB2x8BAdwJs2_A)\n",
				"date_published": "2025-03-03T07:33:21+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/03/never-gets-old-trance-trancefamily.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/01/love-michael-west-doesnt-care.html",
				
				"content_html": "<p>Love Michael West, doesn&rsquo;t care about the repercussions, just called it as he sees it #auspol</p>\n<p><a href=\"https://youtu.be/0wD76ESIKZM?si=Nfc2NoUflS5QUXv9\">youtu.be/0wD76ESIK&hellip;</a></p>\n",
				"content_text": "Love Michael West, doesn't care about the repercussions, just called it as he sees it #auspol\r\n\r\n[youtu.be/0wD76ESIK...](https://youtu.be/0wD76ESIKZM?si=Nfc2NoUflS5QUXv9)\n",
				"date_published": "2025-03-02T09:28:10+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/01/love-michael-west-doesnt-care.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/02/i-got-on-the-abc.html",
				
				"content_html": "<p>I got 6.5/7 on the ABC Civics Quiz that they say that year 10 students should know #auspol</p>\n<p><a href=\"https://www.abc.net.au/news/2025-02-19/quiz-civics-australian-democracy-acara-test-results/104949450\">www.abc.net.au/news/2025&hellip;</a></p>\n<!-- raw HTML omitted -->\n",
				"content_text": "I got 6.5/7 on the ABC Civics Quiz that they say that year 10 students should know #auspol\r\n\r\n[www.abc.net.au/news/2025...](https://www.abc.net.au/news/2025-02-19/quiz-civics-australian-democracy-acara-test-results/104949450)\r\n\n\n<img src=\"uploads/2025/civics-quiz.png\" width=\"600\" height=\"324\" alt=\"\">\n",
				"date_published": "2025-03-02T06:06:26+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/02/i-got-on-the-abc.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/03/01/football-and-footballtactics-evolve-so.html",
				
				"content_html": "<p>#football and #footballtactics evolve so quickly these days</p>\n<p><a href=\"https://open.spotify.com/episode/27VTDk3ho3PyLKXimF0TnY?si=G0-WgtMvTNePYGaPso2QqA\">open.spotify.com/episode/2&hellip;</a></p>\n",
				"content_text": "#football and #footballtactics evolve so quickly these days\r\n\r\n[open.spotify.com/episode/2...](https://open.spotify.com/episode/27VTDk3ho3PyLKXimF0TnY?si=G0-WgtMvTNePYGaPso2QqA)\n",
				"date_published": "2025-03-01T08:06:41+10:00",
				"url": "https://sajilicious.micro.blog/2025/03/01/football-and-footballtactics-evolve-so.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/27/life-is-indeed-stranger-than.html",
				
				"content_html": "<p>Life is indeed stranger than fiction as this seems more interesting than #succession #murdoch</p>\n<p><a href=\"https://open.spotify.com/episode/2YZx2mY3CAW8oiPQsYpPAb?si=SGVMoGwIRqCT73vF5LP6qQ\">open.spotify.com/episode/2&hellip;</a></p>\n",
				"content_text": "Life is indeed stranger than fiction as this seems more interesting than #succession #murdoch\r\n\r\n[open.spotify.com/episode/2...](https://open.spotify.com/episode/2YZx2mY3CAW8oiPQsYpPAb?si=SGVMoGwIRqCT73vF5LP6qQ)\n",
				"date_published": "2025-02-27T17:45:09+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/27/life-is-indeed-stranger-than.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/27/and-its-hard-to-hold.html",
				
				"content_html": "<p>And it&rsquo;s hard to hold a candle, in the cold Manchester rain #munips #mufc #manchesterunited</p>\n",
				"content_text": "And it's hard to hold a candle, in the cold Manchester rain #munips #mufc #manchesterunited\n",
				"date_published": "2025-02-27T05:58:23+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/27/and-its-hard-to-hold.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/25/make-your-own-mind-up.html",
				
				"content_html": "<p>Make your own mind up on the PM&rsquo;s performance on #qanda #auspol</p>\n<p><a href=\"https://www.youtube.com/live/mx8k9k83sWw?si=WDeJL9w48Vv_5DBG\">www.youtube.com/live/mx8k&hellip;</a></p>\n",
				"content_text": "Make your own mind up on the PM's performance on #qanda #auspol\r\n\r\n[www.youtube.com/live/mx8k...](https://www.youtube.com/live/mx8k9k83sWw?si=WDeJL9w48Vv_5DBG)\n",
				"date_published": "2025-02-25T06:03:55+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/25/make-your-own-mind-up.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/24/great-video-with-examples-that.html",
				
				"content_html": "<p>Great video, with examples, that explains how preferential voting works in #auspol</p>\n<p><a href=\"https://youtu.be/YiLAx7kp4Rc?si=Oy0jLQMpZzB1mkwh\">youtu.be/YiLAx7kp4&hellip;</a></p>\n",
				"content_text": "Great video, with examples, that explains how preferential voting works in #auspol\r\n\r\n[youtu.be/YiLAx7kp4...](https://youtu.be/YiLAx7kp4Rc?si=Oy0jLQMpZzB1mkwh)\n",
				"date_published": "2025-02-24T12:25:58+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/24/great-video-with-examples-that.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/24/its-a-shame-to-see.html",
				
				"content_html": "<p>It&rsquo;s a shame to see that our Matildas are just not in the same class as best national women&rsquo;s teams, despite having a lot a players playing in the English WSL #matildas</p>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n",
				"content_text": "It's a shame to see that our Matildas are just not in the same class as best national women's teams, despite having a lot a players playing in the English WSL #matildas\r\n\n\n<img src=\"uploads/2025/sofascore-1740354555.png\" width=\"385\" height=\"600\" alt=\"\"><img src=\"uploads/2025/sofascore-1740354526.png\" width=\"364\" height=\"600\" alt=\"\">\n",
				"date_published": "2025-02-24T09:53:07+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/24/its-a-shame-to-see.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/22/maguire-ballwatching-on-that-second.html",
				
				"content_html": "<p>Maguire, ball-watching on that second goal, as usual.</p>\n<p>He never scans! #manutd #manchesterunited</p>\n",
				"content_text": "Maguire, ball-watching on that second goal, as usual.\r\n\r\nHe never scans! #manutd #manchesterunited \n",
				"date_published": "2025-02-22T23:37:47+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/22/maguire-ballwatching-on-that-second.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/22/elon-wont-be-able-to.html",
				
				"content_html": "<p>#elon won&rsquo;t be able to cut $2 trillion from the US federal budget, here&rsquo;s why: <a href=\"https://youtu.be/lG9pxvpGY-Q?si=vIefVZreW5mDAAvg\">youtu.be/lG9pxvpGY&hellip;</a></p>\n<p>#trump #politics</p>\n",
				"content_text": "#elon won't be able to cut $2 trillion from the US federal budget, here's why: [youtu.be/lG9pxvpGY...](https://youtu.be/lG9pxvpGY-Q?si=vIefVZreW5mDAAvg)\r\n\r\n#trump #politics\n",
				"date_published": "2025-02-22T17:07:52+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/22/elon-wont-be-able-to.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/22/nuclearfusion-reactor-run-for-minutes.html",
				
				"content_html": "<p>#nuclearfusion reactor run for 22 minutes in France #energytransition #netzero</p>\n<p><a href=\"https://newatlas.com/energy/france-tokamak-cea-west-fusion-reactor-record-plasma-duration/\">newatlas.com/energy/fr&hellip;</a></p>\n",
				"content_text": "#nuclearfusion reactor run for 22 minutes in France #energytransition #netzero\r\n\r\n[newatlas.com/energy/fr...](https://newatlas.com/energy/france-tokamak-cea-west-fusion-reactor-record-plasma-duration/)\n",
				"date_published": "2025-02-22T15:44:04+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/22/nuclearfusion-reactor-run-for-minutes.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/22/toxic-culture-in-spanish-football.html",
				
				"content_html": "<p>Toxic culture in Spanish football as exposed by the Rubiales kiss #womensfootball</p>\n<p><a href=\"https://youtu.be/nbLH9sXAGLE?si=tS1QYR2ncIwQmrWV\">youtu.be/nbLH9sXAG&hellip;</a></p>\n",
				"content_text": "Toxic culture in Spanish football as exposed by the Rubiales kiss #womensfootball\r\n\r\n[youtu.be/nbLH9sXAG...](https://youtu.be/nbLH9sXAGLE?si=tS1QYR2ncIwQmrWV)\n",
				"date_published": "2025-02-22T06:05:51+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/22/toxic-culture-in-spanish-football.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/21/the-worlds-largest-electric-ferry.html",
				
				"content_html": "<p>The world&rsquo;s largest electric ferry #renewableenergy</p>\n<p><a href=\"https://youtu.be/4rR57tXdOHQ?si=UDzJPnLmhUPfEq6t\">youtu.be/4rR57tXdO&hellip;</a></p>\n",
				"content_text": "The world's largest electric ferry #renewableenergy\r\n\r\n[youtu.be/4rR57tXdO...](https://youtu.be/4rR57tXdOHQ?si=UDzJPnLmhUPfEq6t)\n",
				"date_published": "2025-02-22T05:13:27+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/21/the-worlds-largest-electric-ferry.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/21/dont-believe-everything-you-hear.html",
				
				"content_html": "<p>Don&rsquo;t believe everything you hear about making the public service smaller and more efficient #auspol</p>\n<p><a href=\"https://youtu.be/j2X7ICTqiOc?si=DFUxRS32oz5sMyhz\">youtu.be/j2X7ICTqi&hellip;</a></p>\n",
				"content_text": "Don't believe everything you hear about making the public service smaller and more efficient #auspol\r\n\r\n[youtu.be/j2X7ICTqi...](https://youtu.be/j2X7ICTqiOc?si=DFUxRS32oz5sMyhz)\n",
				"date_published": "2025-02-21T12:46:44+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/21/dont-believe-everything-you-hear.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/21/if-youre-a-windows-user.html",
				
				"content_html": "<p>If you&rsquo;re a Windows user and wished File Explorer could do more, then check these out #windows #fileexplorer</p>\n<p><a href=\"https://youtu.be/uDUQrC5YxT0?si=A8wzTheIsWVvFiP5\">youtu.be/uDUQrC5Yx&hellip;</a></p>\n",
				"content_text": "If you're a Windows user and wished File Explorer could do more, then check these out #windows #fileexplorer\r\n\r\n[youtu.be/uDUQrC5Yx...](https://youtu.be/uDUQrC5YxT0?si=A8wzTheIsWVvFiP5)\n",
				"date_published": "2025-02-21T11:26:21+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/21/if-youre-a-windows-user.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/21/great-chat-about-manchesterunited-especially.html",
				
				"content_html": "<p>Great chat about #manchesterunited especially Ten Hag&rsquo;s man-management issues, the precarious financial position, where the #glazersout movement is, and how Sir Jim is going so far</p>\n<p><a href=\"https://open.spotify.com/episode/4WYeg7duHhs515R30owBIQ?si=mpmxpkPIR1mz_F-Nb38h0g\">open.spotify.com/episode/4&hellip;</a></p>\n",
				"content_text": "Great chat about #manchesterunited especially Ten Hag's man-management issues, the precarious financial position, where the #glazersout movement is, and how Sir Jim is going so far\r\n\r\n[open.spotify.com/episode/4...](https://open.spotify.com/episode/4WYeg7duHhs515R30owBIQ?si=mpmxpkPIR1mz_F-Nb38h0g)\n",
				"date_published": "2025-02-21T06:17:44+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/21/great-chat-about-manchesterunited-especially.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/21/i-found-this-super-interesting.html",
				
				"content_html": "<p>I found this super interesting #football #footballanalytics #ai #bigdata</p>\n<p><a href=\"https://open.spotify.com/episode/1c6H6gR5eB91Wg2YoGmaiM?si=wtBdDOt2SfeFpjU_LOBArA\">open.spotify.com/episode/1&hellip;</a></p>\n",
				"content_text": "I found this super interesting #football #footballanalytics #ai #bigdata\r\n\r\n[open.spotify.com/episode/1...](https://open.spotify.com/episode/1c6H6gR5eB91Wg2YoGmaiM?si=wtBdDOt2SfeFpjU_LOBArA)\n",
				"date_published": "2025-02-21T05:25:16+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/21/i-found-this-super-interesting.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/20/good-history-lesson-on-australian.html",
				
				"content_html": "<p>Good history lesson on Australian interest rates and why things are so expensive.</p>\n<p>Spoiler, it&rsquo;s not a domestic issue.</p>\n<p>#auspol #costoflivingcrisis\n<a href=\"https://open.spotify.com/episode/0a94fRXCVwYmxInr7iBlOW?si=a0OsrIdYSR6le93YnpJijw\">open.spotify.com/episode/0&hellip;</a></p>\n",
				"content_text": "Good history lesson on Australian interest rates and why things are so expensive.\r\n\r\nSpoiler, it's not a domestic issue.\r\n\r\n#auspol #costoflivingcrisis\r\n[open.spotify.com/episode/0...](https://open.spotify.com/episode/0a94fRXCVwYmxInr7iBlOW?si=a0OsrIdYSR6le93YnpJijw)\r\n",
				"date_published": "2025-02-20T16:02:50+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/20/good-history-lesson-on-australian.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/16/informative-video-listing-the-events.html",
				
				"content_html": "<p>Informative video listing the events that shaped Trump&rsquo;s idea to acquire Palestinian-occupied territories for American real estate developments #gaza #westbank</p>\n<p><a href=\"https://youtu.be/DdUGdSEXkQU?si=lgPUu0tovHUPBdEs\">youtu.be/DdUGdSEXk&hellip;</a></p>\n",
				"content_text": "Informative video listing the events that shaped Trump's idea to acquire Palestinian-occupied territories for American real estate developments #gaza #westbank\r\n\r\n[youtu.be/DdUGdSEXk...](https://youtu.be/DdUGdSEXkQU?si=lgPUu0tovHUPBdEs)\n",
				"date_published": "2025-02-16T06:34:33+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/16/informative-video-listing-the-events.html"
			},
			{
				"id": "http://sajilicious.micro.blog/2025/02/15/domain-event-dispatching-using-the.html",
				"title": "Domain event dispatching using the outbox pattern with Entity Framework",
				"content_html": "<h2 id=\"what-is-domain-event-dispatching\">What is domain event dispatching?</h2>\n<p>Domain event dispatching is a concept that related to <a href=\"https://martinfowler.com/bliki/DomainDrivenDesign.html\">domain-driven design</a>, or DDD as it&rsquo;s also known.</p>\n<p>Having said that, event dispatching is central to any <a href=\"https://learn.microsoft.com/en-us/azure/architecture/guide/architecture-styles/event-driven\">event-driven architecture</a>, which follows the <a href=\"https://learn.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber\">publisher-subscriber pattern</a>.</p>\n<p>Now, I&rsquo;ve not actually read Eric Evans' seminal book on domain-driven design, <a href=\"https://www.amazon.com.au/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215\">Domain-driven Design: Tackling Complexity in the Heart of Software</a>, so I&rsquo;m unsure whether Evans suggests whether domain events should be published as part of the transaction that creates them, or have the event persisted with the change in application state and then later published using an <a href=\"https://codeopinion.com/outbox-pattern-reliably-save-state-publish-events\">outbox pattern</a>.</p>\n<p>I prefer the outbox pattern for domain event dispatching because I don&rsquo;t think you want a scenario where data is persisted and an event is raised that has multiple subscribers, but one of the subscribers fails to execute, causing the whole transation to be rolled back.</p>\n<p>You then get an inconsistent scenario where certain event handlers have been handled, but the data that relates to those actions does not exist.  Why send a confirmation email for an account that wasn&rsquo;t successfully regsitered.</p>\n<p>Or, conversely, the transaction is not rolled back and one subscriber has failed to execute (including retries with back-off).</p>\n<p>The outbox pattern, keeps a record of whether the event has been dispatched or &ldquo;sent&rdquo;, behaving a bit like a service bus.</p>\n<p>In this blog post, I&rsquo;m going to explore how an application using <a href=\"https://learn.microsoft.com/en-us/aspnet/entity-framework\">Entity Framework</a> as an ORM can use an outbox pattern to publish domain events that are persisted with the application data.</p>\n<p>The packages used will be Entity Framewok and I will leverage <code>INotification</code> in <a href=\"https://github.com/jbogard/MediatR\">MediatR</a> to assist with the publisher-subscriber implementation.</p>\n<p>All of these code samples are taken from my <a href=\"https://github.com/TheMagnificent11/lewee\">Lewee</a> project.</p>\n<h2 id=\"domain-event\">Domain Event</h2>\n<p>Here&rsquo;s rough representation of a domain event.</p>\n<p>I&rsquo;ve included a <code>CorrelationId</code> property that I believe should be set to allow you to correlate the logs from the original transaction that persisted the <a href=\"https://martinfowler.com/bliki/DDD_Aggregate.html\">aggregate root</a> and all the subsequent events that get handled as part of the dispatching.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> MediatR;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">interface</span> IDomainEvent : INotification\n{\n    Guid CorrelationId { <span style=\"color:#66d9ef\">get</span>; }\n}\n</code></pre></div><p>And here&rsquo;s a sample implementation of an menu item being added to the table&rsquo;s order at a restaurant.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">MenuItemAddedToOrderDomainEvent</span> : IDomainEvent\n{\n    <span style=\"color:#66d9ef\">public</span> MenuItemAddedToOrderDomainEvent(\n        Guid correlationId,\n        Guid tableId,\n        <span style=\"color:#66d9ef\">int</span> tableNumber,\n        Guid orderId,\n        Guid menuItemId,\n        <span style=\"color:#66d9ef\">decimal</span> price)\n    {\n        <span style=\"color:#66d9ef\">this</span>.CorrelationId = correlationId;\n        <span style=\"color:#66d9ef\">this</span>.TableId = tableId;\n        <span style=\"color:#66d9ef\">this</span>.TableNumber = tableNumber;\n        <span style=\"color:#66d9ef\">this</span>.OrderId = orderId;\n        <span style=\"color:#66d9ef\">this</span>.MenuItemId = menuItemId;\n        <span style=\"color:#66d9ef\">this</span>.Price = price;\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> Guid CorrelationId { <span style=\"color:#66d9ef\">get</span>; }\n    <span style=\"color:#66d9ef\">public</span> Guid TableId { <span style=\"color:#66d9ef\">get</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">int</span> TableNumber { <span style=\"color:#66d9ef\">get</span>; }\n    <span style=\"color:#66d9ef\">public</span> Guid OrderId { <span style=\"color:#66d9ef\">get</span>; }\n    <span style=\"color:#66d9ef\">public</span> Guid MenuItemId { <span style=\"color:#66d9ef\">get</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">decimal</span> Price { <span style=\"color:#66d9ef\">get</span>; }\n}\n</code></pre></div><h2 id=\"storing-domain-events\">Storing Domain Events</h2>\n<h3 id=\"entity-framework-entity\">Entity Framework Entity</h3>\n<p>Below is entity class used to store the details about a domain event after it related aggregate root has been persisted.</p>\n<p>Things to note, we are storing the domain event as JSON (<code>DomainEventJson</code>) and also storing the assembly name (<code>DomainEventAssemblyName</code>) and class name (<code>DomainEventClassName</code>) to allow us to deserialize the JSON back to the doamin event in the <code>ToDomainEvent</code> method.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> System.Reflection;\n<span style=\"color:#66d9ef\">using</span> System.Text.Json;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">DomainEventReference</span>\n{\n    <span style=\"color:#66d9ef\">public</span> DomainEventReference(DomainEvent domainEvent)\n    {\n        <span style=\"color:#66d9ef\">this</span>.Id = Guid.NewGuid();\n        <span style=\"color:#66d9ef\">this</span>.DomainEventAssemblyName = assemblyName;\n        <span style=\"color:#66d9ef\">this</span>.DomainEventClassName = fullClassName;\n        <span style=\"color:#66d9ef\">this</span>.DomainEventJson = JsonSerializer.Serialize(domainEvent, domainEventType);\n        <span style=\"color:#66d9ef\">this</span>.PersistedAt = DateTime.UtcNow;\n        <span style=\"color:#66d9ef\">this</span>.Dispatched = <span style=\"color:#66d9ef\">false</span>;\n    }\n\n\n    <span style=\"color:#75715e\">// EF constructor\n</span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">private</span> DomainEventReference()\n    {\n        <span style=\"color:#66d9ef\">this</span>.DomainEventAssemblyName = <span style=\"color:#66d9ef\">string</span>.Empty;\n        <span style=\"color:#66d9ef\">this</span>.DomainEventClassName = <span style=\"color:#66d9ef\">string</span>.Empty;\n        <span style=\"color:#66d9ef\">this</span>.DomainEventJson = <span style=\"color:#e6db74\">&#34;{}&#34;</span>;\n        <span style=\"color:#66d9ef\">this</span>.PersistedAt = DateTime.UtcNow;\n        <span style=\"color:#66d9ef\">this</span>.Dispatched = <span style=\"color:#66d9ef\">false</span>;\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> Guid Id { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">string</span> DomainEventAssemblyName { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">string</span> DomainEventClassName { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">string</span> DomainEventJson { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">bool</span> Dispatched { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> DateTime PersistedAt { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> DateTime? DispatchedAt { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n\n\n    <span style=\"color:#66d9ef\">public</span> DomainEvent? ToDomainEvent()\n    {\n        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">string</span>.IsNullOrWhiteSpace(<span style=\"color:#66d9ef\">this</span>.DomainEventJson))\n        {\n            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">null</span>;\n        }\n\n\n        <span style=\"color:#66d9ef\">var</span> assembly = Assembly.Load(<span style=\"color:#66d9ef\">this</span>.DomainEventAssemblyName);\n        <span style=\"color:#66d9ef\">var</span> targetType = assembly.GetType(<span style=\"color:#66d9ef\">this</span>.DomainEventClassName);\n\n\n        <span style=\"color:#66d9ef\">if</span> (targetType == <span style=\"color:#66d9ef\">null</span>)\n        {\n            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">null</span>;\n        }\n\n\n        <span style=\"color:#66d9ef\">var</span> objDomainEvent = Deserialize(<span style=\"color:#66d9ef\">this</span>.DomainEventJson, targetType);\n        <span style=\"color:#66d9ef\">if</span> (objDomainEvent <span style=\"color:#66d9ef\">is</span> not DomainEvent domainEvent)\n        {\n            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">null</span>;\n        }\n\n\n        domainEvent.UserId = <span style=\"color:#66d9ef\">this</span>.UserId;\n\n\n        <span style=\"color:#66d9ef\">return</span> domainEvent;\n\n\n        <span style=\"color:#66d9ef\">static</span> <span style=\"color:#66d9ef\">object?</span> Deserialize(<span style=\"color:#66d9ef\">string</span> json, Type type)\n        {\n            <span style=\"color:#66d9ef\">try</span>\n            {\n                <span style=\"color:#66d9ef\">return</span> JsonSerializer.Deserialize(json, type);\n            }\n            <span style=\"color:#66d9ef\">catch</span>\n            {\n                <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">null</span>;\n            }\n        }\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">void</span> Dispatch()\n    {\n        <span style=\"color:#66d9ef\">this</span>.Dispatched = <span style=\"color:#66d9ef\">true</span>;\n        <span style=\"color:#66d9ef\">this</span>.DispatchedAt = DateTime.UtcNow;\n    }\n}\n</code></pre></div><p>And here&rsquo;s how we&rsquo;ve configured the underlying database table.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore;\n<span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore.Metadata.Builders;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">DomainEventReferenceConfiguration</span> : IEntityTypeConfiguration&lt;DomainEventReference&gt;\n{\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">void</span> Configure(EntityTypeBuilder&lt;DomainEventReference&gt; builder)\n    {\n        builder.HasKey(x =&gt; x.Id);\n\n\n        builder.Property(x =&gt; x.DomainEventAssemblyName)\n            .HasMaxLength(<span style=\"color:#ae81ff\">255</span>)\n            .IsRequired();\n\n\n        builder.Property(x =&gt; x.DomainEventClassName)\n            .HasMaxLength(<span style=\"color:#ae81ff\">255</span>)\n            .IsRequired();\n\n\n        builder.Property(x =&gt; x.DomainEventJson)\n            .HasMaxLength(<span style=\"color:#ae81ff\">8000</span>)\n            .IsRequired();\n\n\n        builder.Property(x =&gt; x.Dispatched)\n            .IsRequired();\n\n\n        builder.Property(x =&gt; x.PersistedAt)\n            .IsRequired();\n\n\n        builder.Property(x =&gt; x.DispatchedAt)\n            .IsRequired(<span style=\"color:#66d9ef\">false</span>);\n\n\n        builder.Property(x =&gt; x.UserId)\n            .HasMaxLength(<span style=\"color:#ae81ff\">50</span>);\n\n\n        builder.HasIndex(\n            nameof(DomainEventReference.Dispatched),\n            nameof(DomainEventReference.PersistedAt));\n    }\n}\n</code></pre></div><h3 id=\"how-the-aggregate-root-stores-the-domain-event\">How the aggregate root stores the domain event</h3>\n<p>The aggregate root needs a collection of domain events on it.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">DomainEventsCollection</span>\n{\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">readonly</span> List&lt;DomainEvent&gt; domainEvents = <span style=\"color:#66d9ef\">new</span>();\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">readonly</span> <span style=\"color:#66d9ef\">object</span> syncLock = <span style=\"color:#66d9ef\">new</span>();\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">void</span> Raise&lt;T&gt;(T domainEvent)\n        <span style=\"color:#66d9ef\">where</span> T : DomainEvent\n    {\n        <span style=\"color:#66d9ef\">lock</span> (<span style=\"color:#66d9ef\">this</span>.syncLock)\n        {\n            <span style=\"color:#66d9ef\">this</span>.domainEvents.Add(domainEvent);\n        }\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> DomainEvent[] GetAndClear()\n    {\n        <span style=\"color:#66d9ef\">lock</span> (<span style=\"color:#66d9ef\">this</span>.syncLock)\n        {\n            <span style=\"color:#66d9ef\">var</span> events = <span style=\"color:#66d9ef\">this</span>.domainEvents.ToArray();\n            <span style=\"color:#66d9ef\">this</span>.domainEvents.Clear();\n\n\n            <span style=\"color:#66d9ef\">return</span> events;\n        }\n    }\n}\n</code></pre></div><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">abstract</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">AggregateRoot</span> : Entity\n{\n    <span style=\"color:#66d9ef\">protected</span> AggregateRoot()\n        : <span style=\"color:#66d9ef\">base</span>(Guid.NewGuid())\n    {\n    }\n\n\n    <span style=\"color:#66d9ef\">protected</span> AggregateRoot(Guid id)\n        : <span style=\"color:#66d9ef\">base</span>(id)\n    {\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> DomainEventsCollection DomainEvents { <span style=\"color:#66d9ef\">get</span>; } = <span style=\"color:#66d9ef\">new</span> DomainEventsCollection();\n}\n</code></pre></div><p>And here&rsquo;s a sample implementation of an aggregate root &ldquo;raising&rdquo; a domain event.</p>\n<p>In this example, a menu item is being added to the order of a table at a restaurant.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">Table</span> : AggregateRoot\n{\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">readonly</span> List&lt;Order&gt; orders = <span style=\"color:#66d9ef\">new</span>();\n\n\n    <span style=\"color:#66d9ef\">public</span> Table(Guid id, <span style=\"color:#66d9ef\">int</span> tableNumber)\n        : <span style=\"color:#66d9ef\">base</span>(id)\n    {\n        <span style=\"color:#66d9ef\">this</span>.TableNumber = tableNumber;\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> Order? CurrentOrder =&gt; <span style=\"color:#66d9ef\">this</span>.orders\n        .Where(x =&gt; x.OrderStatusId != OrderStatus.Paid)\n        .Where(x =&gt; !x.IsDeleted)\n        .OrderByDescending(x =&gt; x.CreatedAtUtc)\n        .FirstOrDefault();\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">int</span> TableNumber { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">bool</span> IsInUse { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">set</span>; }\n    <span style=\"color:#66d9ef\">public</span> IReadOnlyCollection&lt;Order&gt; Orders =&gt; <span style=\"color:#66d9ef\">this</span>.orders;\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">void</span> OrderMenuItem(MenuItem menuItem, Guid correlationId)\n    {\n        <span style=\"color:#66d9ef\">if</span> (!<span style=\"color:#66d9ef\">this</span>.IsInUse || <span style=\"color:#66d9ef\">this</span>.CurrentOrder == <span style=\"color:#66d9ef\">null</span>)\n        {\n            <span style=\"color:#66d9ef\">throw</span> <span style=\"color:#66d9ef\">new</span> DomainException(ErrorMessages.CannotOrderIfTableNotInUse);\n        }\n\n\n        <span style=\"color:#66d9ef\">this</span>.CurrentOrder.AddItem(menuItem);\n\n\n        <span style=\"color:#66d9ef\">this</span>.DomainEvents.Raise(<span style=\"color:#66d9ef\">new</span> MenuItemAddedToOrderDomainEvent(\n            correlationId,\n            <span style=\"color:#66d9ef\">this</span>.Id,\n            <span style=\"color:#66d9ef\">this</span>.TableNumber,\n            <span style=\"color:#66d9ef\">this</span>.CurrentOrder.Id,\n            menuItem.Id,\n            menuItem.Price));\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">static</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">ErrorMessages</span>\n    {\n        <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">const</span> <span style=\"color:#66d9ef\">string</span> CannotOrderIfTableNotInUse = <span style=\"color:#e6db74\">&#34;Cannot order items if table is not in use&#34;</span>;\n    }\n}\n</code></pre></div><h3 id=\"how-the-dbcontext-stores-the-domain-event\">How the DbContext stores the domain event</h3>\n<p>We are going to use a <a href=\"https://learn.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.diagnostics.savechangesinterceptor\">SaveChangesInterceptor</a> to find the domain events added to our aggregate roots and add them as <code>DomainEventReference</code> instances before &ldquo;save changes&rdquo; executes.</p>\n<p>To do that, we need to be able easily identify the <code>DbSet</code> for our <code>DomainEventReference</code> entities.</p>\n<p>So, we&rsquo;ve created an <code>IApplicationDbContext</code> interface that we can add to our Entity Framework <code>DbContext</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">interface</span> IApplicationDbContext\n{\n    DbSet&lt;DomainEventReference&gt;? DomainEventReferences { <span style=\"color:#66d9ef\">get</span>; }\n}\n</code></pre></div><p>And here&rsquo;s the interceptor that find the domain events on the aggregate roots and stores them in the <code>DbContext</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore;\n<span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore.ChangeTracking;\n<span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore.Diagnostics;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">DomainEventSaveChangesInterceptor</span>&lt;TContext&gt; : SaveChangesInterceptor\n    <span style=\"color:#66d9ef\">where</span> TContext : DbContext, IApplicationDbContext\n{\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">override</span> InterceptionResult&lt;<span style=\"color:#66d9ef\">int</span>&gt; SavingChanges(\n        DbContextEventData eventData,\n        InterceptionResult&lt;<span style=\"color:#66d9ef\">int</span>&gt; result)\n    {\n        <span style=\"color:#66d9ef\">this</span>.StoreDomainEvents(eventData.Context);\n\n\n        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">base</span>.SavingChanges(eventData, result);\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">override</span> ValueTask&lt;InterceptionResult&lt;<span style=\"color:#66d9ef\">int</span>&gt;&gt; SavingChangesAsync(\n        DbContextEventData eventData,\n        InterceptionResult&lt;<span style=\"color:#66d9ef\">int</span>&gt; result,\n        CancellationToken cancellationToken = <span style=\"color:#66d9ef\">default</span>)\n    {\n        <span style=\"color:#66d9ef\">this</span>.StoreDomainEvents(eventData.Context);\n\n\n        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">base</span>.SavingChangesAsync(eventData, result, cancellationToken);\n    }\n\n\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">void</span> StoreDomainEvents(DbContext? context)\n    {\n        <span style=\"color:#66d9ef\">if</span> (context == <span style=\"color:#66d9ef\">null</span> || context <span style=\"color:#66d9ef\">is</span> not TContext)\n        {\n            <span style=\"color:#66d9ef\">return</span>;\n        }\n\n\n        <span style=\"color:#66d9ef\">foreach</span> (<span style=\"color:#66d9ef\">var</span> entry <span style=\"color:#66d9ef\">in</span> context.ChangeTracker.Entries().ToList())\n        {\n            <span style=\"color:#66d9ef\">this</span>.StoreDomainEventsForEntry((TContext)context, entry);\n        }\n    }\n\n\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">void</span> StoreDomainEventsForEntry(TContext context, EntityEntry entry)\n    {\n        <span style=\"color:#66d9ef\">if</span> (entry.Entity <span style=\"color:#66d9ef\">is</span> not AggregateRoot aggregateRootEntity)\n        {\n            <span style=\"color:#66d9ef\">return</span>;\n        }\n\n\n        <span style=\"color:#66d9ef\">var</span> events = aggregateRootEntity.DomainEvents.GetAndClear();\n\n\n        <span style=\"color:#66d9ef\">foreach</span> (<span style=\"color:#66d9ef\">var</span> domainEvent <span style=\"color:#66d9ef\">in</span> events)\n        {\n            <span style=\"color:#66d9ef\">if</span> (domainEvent == <span style=\"color:#66d9ef\">null</span>)\n            {\n                <span style=\"color:#66d9ef\">continue</span>;\n            }\n\n\n            <span style=\"color:#66d9ef\">var</span> reference = <span style=\"color:#66d9ef\">new</span> DomainEventReference(domainEvent);\n\n\n            context.DomainEventReferences?.Add(reference);\n        }\n    }\n}\n</code></pre></div><p>Finally, here&rsquo;s an abstract <code>DbContext</code> implementation that exposes the <code>DomainEventReference</code> <code>DbSet</code> and adds the <code>DomainEventSaveChangesInterceptor</code>.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">abstract</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">ApplicationDbContext</span>&lt;TContext&gt; : DbContext, IApplicationDbContext\n    <span style=\"color:#66d9ef\">where</span> TContext : DbContext, IApplicationDbContext\n{\n    <span style=\"color:#66d9ef\">protected</span> ApplicationDbContext(DbContextOptions&lt;TContext&gt; options)\n        : <span style=\"color:#66d9ef\">base</span>(options)\n    {\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> DbSet&lt;DomainEventReference&gt;? DomainEventReferences { <span style=\"color:#66d9ef\">get</span>; <span style=\"color:#66d9ef\">internal</span> <span style=\"color:#66d9ef\">set</span>; }\n\n\n    <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">override</span> <span style=\"color:#66d9ef\">void</span> OnModelCreating(ModelBuilder modelBuilder)\n    {\n        <span style=\"color:#66d9ef\">base</span>.OnModelCreating(modelBuilder);\n\n\n        modelBuilder.ApplyConfiguration(<span style=\"color:#66d9ef\">new</span> DomainEventReferenceConfiguration());\n\n\n        <span style=\"color:#66d9ef\">this</span>.ConfigureDatabaseModel(modelBuilder);\n    }\n\n\n    <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">override</span> <span style=\"color:#66d9ef\">void</span> OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n    {\n        <span style=\"color:#66d9ef\">base</span>.OnConfiguring(optionsBuilder);\n\n\n        optionsBuilder.AddInterceptors(<span style=\"color:#66d9ef\">new</span> DomainEventSaveChangesInterceptor&lt;TContext&gt;());\n    }\n\n\n    <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">abstract</span> <span style=\"color:#66d9ef\">void</span> ConfigureDatabaseModel(ModelBuilder modelBuilder);\n}\n</code></pre></div><h2 id=\"dispatching-domain-events\">Dispatching Domain Events</h2>\n<p>The code below reads from the database table for the <code>DomainEventReference</code> entity and dispatches them in batches of 50.</p>\n<p>For event row, it deserializes the JSON to the original <code>IDomainEvent</code> and because <code>IDomainEvent</code> implements <code>INotification</code> from <code>MediatR</code>, you can use the <code>Publish</code> to achieve the publisher-subscriber pattern; there can be multiple notification handlers for each event.  Conversely, if there are not notification handlers, <code>MediatR</code> will handle this for us and return successfully.</p>\n<p>The domain event does not get marked as &ldquo;dispatched&rdquo; in the database unless all dispatching succeeds.</p>\n<p>There is a downside here because you could have three notification handlers for an event, two could succeed and one could fail, causing the event does not get marked as dispatched.</p>\n<p>Any process that tries to re-dispatch will attempt all three handlers again, so you could get duplication of certain handlers.</p>\n<p>However, I think this is still better than the other scenario I outlined earlier.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> MediatR;\n<span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore;\n<span style=\"color:#66d9ef\">using</span> Serilog;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">DomainEventDispatcher</span>&lt;TContext&gt;\n    <span style=\"color:#66d9ef\">where</span> TContext : DbContext, IApplicationDbContext\n{\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">const</span> <span style=\"color:#66d9ef\">int</span> BatchSize = <span style=\"color:#ae81ff\">50</span>;\n\n\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">readonly</span> IDbContextFactory&lt;TContext&gt; dbContextFactory;\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">readonly</span> IMediator mediator;\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">readonly</span> ILogger logger;\n\n\n    <span style=\"color:#66d9ef\">public</span> DomainEventDispatcher(\n        IDbContextFactory&lt;TContext&gt; dbContextFactory,\n        IMediator mediator,\n        ILogger logger)\n    {\n        <span style=\"color:#66d9ef\">this</span>.dbContextFactory = dbContextFactory;\n        <span style=\"color:#66d9ef\">this</span>.mediator = mediator;\n        <span style=\"color:#66d9ef\">this</span>.logger = logger.ForContext&lt;DomainEventDispatcher&lt;TContext&gt;&gt;();\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">async</span> Task DispatchEvents(CancellationToken cancellationToken)\n    {\n        <span style=\"color:#66d9ef\">var</span> eventsToDispatch = <span style=\"color:#66d9ef\">await</span> <span style=\"color:#66d9ef\">this</span>.ThereAreEventsToDispatch(cancellationToken);\n\n\n        <span style=\"color:#66d9ef\">while</span> (eventsToDispatch &amp;&amp; !cancellationToken.IsCancellationRequested)\n        {\n            <span style=\"color:#66d9ef\">await</span> <span style=\"color:#66d9ef\">this</span>.DispatchBatch(cancellationToken);\n\n\n            eventsToDispatch = <span style=\"color:#66d9ef\">await</span> <span style=\"color:#66d9ef\">this</span>.ThereAreEventsToDispatch(cancellationToken);\n        }\n    }\n\n\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">async</span> Task&lt;<span style=\"color:#66d9ef\">bool</span>&gt; ThereAreEventsToDispatch(CancellationToken token)\n    {\n        <span style=\"color:#66d9ef\">using</span> (<span style=\"color:#66d9ef\">var</span> scope = <span style=\"color:#66d9ef\">this</span>.dbContextFactory.CreateDbContext())\n        {\n            <span style=\"color:#66d9ef\">var</span> dbSet = scope.Set&lt;DomainEventReference&gt;();\n\n\n            <span style=\"color:#66d9ef\">if</span> (dbSet == <span style=\"color:#66d9ef\">null</span>)\n            {\n                <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n            }\n\n\n            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">await</span> dbSet\n                .Where(x =&gt; !x.Dispatched)\n                .OrderBy(x =&gt; x.PersistedAt)\n                .AnyAsync(token);\n        }\n    }\n\n\n    <span style=\"color:#66d9ef\">private</span> <span style=\"color:#66d9ef\">async</span> Task DispatchBatch(CancellationToken token)\n    {\n        <span style=\"color:#66d9ef\">using</span> (<span style=\"color:#66d9ef\">var</span> scope = <span style=\"color:#66d9ef\">this</span>.dbContextFactory.CreateDbContext())\n        {\n            <span style=\"color:#66d9ef\">var</span> dbSet = scope.Set&lt;DomainEventReference&gt;();\n            <span style=\"color:#66d9ef\">if</span> (dbSet == <span style=\"color:#66d9ef\">null</span>)\n            {\n                <span style=\"color:#66d9ef\">return</span>;\n            }\n\n\n            <span style=\"color:#66d9ef\">var</span> events = <span style=\"color:#66d9ef\">await</span> dbSet\n                .Where(x =&gt; !x.Dispatched)\n                .OrderBy(x =&gt; x.PersistedAt)\n                .Take(BatchSize)\n                .ToArrayAsync(token);\n\n\n            <span style=\"color:#66d9ef\">var</span> domainEvents = <span style=\"color:#66d9ef\">new</span> List&lt;DomainEvent&gt;();\n\n\n            <span style=\"color:#66d9ef\">foreach</span> (<span style=\"color:#66d9ef\">var</span> domainEventReference <span style=\"color:#66d9ef\">in</span> events)\n            {\n                domainEventReference.Dispatch();\n\n\n                <span style=\"color:#66d9ef\">var</span> domainEvent = domainEventReference.ToDomainEvent();\n\n\n                <span style=\"color:#66d9ef\">if</span> (domainEvent == <span style=\"color:#66d9ef\">null</span>)\n                {\n                    <span style=\"color:#66d9ef\">this</span>.logger.Warning(\n                        <span style=\"color:#e6db74\">&#34;Could not deserialize DomainEventReference {Id}&#34;</span>,\n                        domainEventReference.Id);\n                }\n                <span style=\"color:#66d9ef\">else</span>\n                {\n                    domainEvents.Add(domainEvent);\n                }\n            }\n\n\n            <span style=\"color:#66d9ef\">if</span> (domainEvents.Any())\n            {\n                <span style=\"color:#66d9ef\">foreach</span> (<span style=\"color:#66d9ef\">var</span> domainEvent <span style=\"color:#66d9ef\">in</span> domainEvents)\n                {\n                    <span style=\"color:#66d9ef\">await</span> <span style=\"color:#66d9ef\">this</span>.mediator.Publish(domainEvent, token);\n                }\n            }\n\n\n            <span style=\"color:#66d9ef\">await</span> scope.SaveChangesAsync(token);\n        }\n    }\n}\n</code></pre></div><p>So the code above does the dispatching, but what triggers the dispatching?</p>\n<p>As far as I know, there is nothing similar to the <code>SaveChangesInterceptor</code> that executes after a successful save changes.</p>\n<p>So, we&rsquo;ve decided to use a background service.</p>\n<p>In the code below, we are expecting our <code>DomainEventDispatcher</code> to dispatch events every 2.5 seconds.</p>\n<p>So, any events that failed to dispatch will be retried after 2.5 seconds.</p>\n<p><code>DomainEventReference</code> does not currently have a &ldquo;retry count&rdquo; or a &ldquo;failed&rdquo; property and that is definitely an improvement that could be added; fail if retried 10 times.</p>\n<p>Under this solution, we will keep retrying and failed events will be attempted before new events, potentially causing a performance issue if failed events build up.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore;\n<span style=\"color:#66d9ef\">using</span> Microsoft.Extensions.Hosting;\n\n\n<span style=\"color:#66d9ef\">namespace</span> Lewee.Infrastructure.Data;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">DomainEventDispatcherService</span>&lt;TContext&gt; : BackgroundService\n    <span style=\"color:#66d9ef\">where</span> TContext : DbContext, IApplicationDbContext\n{\n    <span style=\"color:#66d9ef\">public</span> DomainEventDispatcherService(DomainEventDispatcher&lt;TContext&gt; domainEventDispatcher)\n    {\n        <span style=\"color:#66d9ef\">this</span>.DomainEventDispatcher = domainEventDispatcher;\n    }\n\n\n    <span style=\"color:#66d9ef\">public</span> DomainEventDispatcher&lt;TContext&gt; DomainEventDispatcher { <span style=\"color:#66d9ef\">get</span>; }\n\n\n    <span style=\"color:#66d9ef\">protected</span> <span style=\"color:#66d9ef\">override</span> <span style=\"color:#66d9ef\">async</span> Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        <span style=\"color:#66d9ef\">while</span> (!stoppingToken.IsCancellationRequested)\n        {\n            <span style=\"color:#66d9ef\">await</span> <span style=\"color:#66d9ef\">this</span>.DomainEventDispatcher.DispatchEvents(stoppingToken);\n\n\n            <span style=\"color:#66d9ef\">await</span> Task.Delay(<span style=\"color:#ae81ff\">2500</span>, stoppingToken);\n        }\n    }\n}\n</code></pre></div><p>There are definitely better ways to achieve this.</p>\n<p>You could override save changes on your <code>DbContext</code> to trigger your domain event dispatcher and later you use some sort of retry policy if any events fails to dispatch.</p>\n<p>That would be more efficient, but more complicated and harder to implement.</p>\n<h2 id=\"dependency-injection-configuration\">Dependency Injection Configuration</h2>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-cs\" data-lang=\"cs\"><span style=\"color:#66d9ef\">using</span> Microsoft.EntityFrameworkCore;\n<span style=\"color:#66d9ef\">using</span> Microsoft.Extensions.DependencyInjection;\n\n\n<span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">static</span> <span style=\"color:#66d9ef\">class</span> <span style=\"color:#a6e22e\">ApplicationDbContextServiceCollectionExtensions</span>\n{\n    <span style=\"color:#66d9ef\">public</span> <span style=\"color:#66d9ef\">static</span> IServiceCollection ConfigureDatabase&lt;T&gt;(\n        <span style=\"color:#66d9ef\">this</span> IServiceCollection services,\n        <span style=\"color:#66d9ef\">string</span> connectionString)\n        <span style=\"color:#66d9ef\">where</span> T : ApplicationDbContext&lt;T&gt;\n    {\n        services.AddDbContextFactory&lt;T&gt;(options =&gt; options.UseSqlServer(connectionString));\n        services.AddScoped&lt;T&gt;();\n\n\n        services.AddSingleton&lt;DomainEventDispatcher&lt;T&gt;&gt;();\n        services.AddHostedService&lt;DomainEventDispatcherService&lt;T&gt;&gt;();\n\n\n        <span style=\"color:#66d9ef\">return</span> services;\n    }\n}\n</code></pre></div><h2 id=\"this-is-a-lot-of-boilerplate\">This is a lot of boilerplate</h2>\n<p>This seems like a lot of code to achieve what I&rsquo;d expect to be relatively straight-forward.</p>\n<p>Given this is fairly common pattern and that DDD is used by a lot in software development, you&rsquo;d expect that there are frameworks that do this for you.</p>\n<p>That&rsquo;s what I&rsquo;ve tried to achieve with <a href=\"https://github.com/TheMagnificent11/lewee\">Lewee</a>.</p>\n<p>However, there&rsquo;s definitely a better way.</p>\n<p>In a future blog post, I&rsquo;d like to explore how to dispatch to a message broker, probably <code>RabbitMQ</code> via <a href=\"https://masstransit.io\">MassTransit</a>, instead of using <code>Mediatr</code> notifications.  I feel like this is more flexible as any service within your distributed application can handle your domain events. not just the service that dispatches it.</p>\n",
				"content_text": "## What is domain event dispatching?\n\n\nDomain event dispatching is a concept that related to [domain-driven design](https://martinfowler.com/bliki/DomainDrivenDesign.html), or DDD as it's also known.\n\n\nHaving said that, event dispatching is central to any [event-driven architecture](https://learn.microsoft.com/en-us/azure/architecture/guide/architecture-styles/event-driven), which follows the [publisher-subscriber pattern](https://learn.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber).\n\n\nNow, I've not actually read Eric Evans' seminal book on domain-driven design, [Domain-driven Design: Tackling Complexity in the Heart of Software](https://www.amazon.com.au/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215), so I'm unsure whether Evans suggests whether domain events should be published as part of the transaction that creates them, or have the event persisted with the change in application state and then later published using an [outbox pattern](https://codeopinion.com/outbox-pattern-reliably-save-state-publish-events).\n\n\nI prefer the outbox pattern for domain event dispatching because I don't think you want a scenario where data is persisted and an event is raised that has multiple subscribers, but one of the subscribers fails to execute, causing the whole transation to be rolled back.\n\n\nYou then get an inconsistent scenario where certain event handlers have been handled, but the data that relates to those actions does not exist.  Why send a confirmation email for an account that wasn't successfully regsitered.\n\n\nOr, conversely, the transaction is not rolled back and one subscriber has failed to execute (including retries with back-off).\n\n\nThe outbox pattern, keeps a record of whether the event has been dispatched or \"sent\", behaving a bit like a service bus.\n\n\nIn this blog post, I'm going to explore how an application using [Entity Framework](https://learn.microsoft.com/en-us/aspnet/entity-framework) as an ORM can use an outbox pattern to publish domain events that are persisted with the application data.\n\n\nThe packages used will be Entity Framewok and I will leverage `INotification` in [MediatR](https://github.com/jbogard/MediatR) to assist with the publisher-subscriber implementation.\n\n\nAll of these code samples are taken from my [Lewee](https://github.com/TheMagnificent11/lewee) project.\n\n\n## Domain Event\n\n\nHere's rough representation of a domain event.\n\n\nI've included a `CorrelationId` property that I believe should be set to allow you to correlate the logs from the original transaction that persisted the [aggregate root](https://martinfowler.com/bliki/DDD_Aggregate.html) and all the subsequent events that get handled as part of the dispatching.\n\n\n```cs\nusing MediatR;\n\n\npublic interface IDomainEvent : INotification\n{\n    Guid CorrelationId { get; }\n}\n```\nAnd here's a sample implementation of an menu item being added to the table's order at a restaurant.\n\n\n```cs\npublic class MenuItemAddedToOrderDomainEvent : IDomainEvent\n{\n    public MenuItemAddedToOrderDomainEvent(\n        Guid correlationId,\n        Guid tableId,\n        int tableNumber,\n        Guid orderId,\n        Guid menuItemId,\n        decimal price)\n    {\n        this.CorrelationId = correlationId;\n        this.TableId = tableId;\n        this.TableNumber = tableNumber;\n        this.OrderId = orderId;\n        this.MenuItemId = menuItemId;\n        this.Price = price;\n    }\n\n\n    public Guid CorrelationId { get; }\n    public Guid TableId { get; }\n    public int TableNumber { get; }\n    public Guid OrderId { get; }\n    public Guid MenuItemId { get; }\n    public decimal Price { get; }\n}\n```\n## Storing Domain Events\n\n\n### Entity Framework Entity\n\n\nBelow is entity class used to store the details about a domain event after it related aggregate root has been persisted.\n\n\nThings to note, we are storing the domain event as JSON (`DomainEventJson`) and also storing the assembly name (`DomainEventAssemblyName`) and class name (`DomainEventClassName`) to allow us to deserialize the JSON back to the doamin event in the `ToDomainEvent` method.\n\n\n```cs\nusing System.Reflection;\nusing System.Text.Json;\n\n\npublic class DomainEventReference\n{\n    public DomainEventReference(DomainEvent domainEvent)\n    {\n        this.Id = Guid.NewGuid();\n        this.DomainEventAssemblyName = assemblyName;\n        this.DomainEventClassName = fullClassName;\n        this.DomainEventJson = JsonSerializer.Serialize(domainEvent, domainEventType);\n        this.PersistedAt = DateTime.UtcNow;\n        this.Dispatched = false;\n    }\n\n\n    // EF constructor\n    private DomainEventReference()\n    {\n        this.DomainEventAssemblyName = string.Empty;\n        this.DomainEventClassName = string.Empty;\n        this.DomainEventJson = \"{}\";\n        this.PersistedAt = DateTime.UtcNow;\n        this.Dispatched = false;\n    }\n\n\n    public Guid Id { get; protected set; }\n    public string DomainEventAssemblyName { get; protected set; }\n    public string DomainEventClassName { get; protected set; }\n    public string DomainEventJson { get; protected set; }\n    public bool Dispatched { get; protected set; }\n    public DateTime PersistedAt { get; protected set; }\n    public DateTime? DispatchedAt { get; protected set; }\n\n\n    public DomainEvent? ToDomainEvent()\n    {\n        if (string.IsNullOrWhiteSpace(this.DomainEventJson))\n        {\n            return null;\n        }\n\n\n        var assembly = Assembly.Load(this.DomainEventAssemblyName);\n        var targetType = assembly.GetType(this.DomainEventClassName);\n\n\n        if (targetType == null)\n        {\n            return null;\n        }\n\n\n        var objDomainEvent = Deserialize(this.DomainEventJson, targetType);\n        if (objDomainEvent is not DomainEvent domainEvent)\n        {\n            return null;\n        }\n\n\n        domainEvent.UserId = this.UserId;\n\n\n        return domainEvent;\n\n\n        static object? Deserialize(string json, Type type)\n        {\n            try\n            {\n                return JsonSerializer.Deserialize(json, type);\n            }\n            catch\n            {\n                return null;\n            }\n        }\n    }\n\n\n    public void Dispatch()\n    {\n        this.Dispatched = true;\n        this.DispatchedAt = DateTime.UtcNow;\n    }\n}\n```\nAnd here's how we've configured the underlying database table.\n\n\n```cs\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.Metadata.Builders;\n\n\npublic class DomainEventReferenceConfiguration : IEntityTypeConfiguration<DomainEventReference>\n{\n    public void Configure(EntityTypeBuilder<DomainEventReference> builder)\n    {\n        builder.HasKey(x => x.Id);\n\n\n        builder.Property(x => x.DomainEventAssemblyName)\n            .HasMaxLength(255)\n            .IsRequired();\n\n\n        builder.Property(x => x.DomainEventClassName)\n            .HasMaxLength(255)\n            .IsRequired();\n\n\n        builder.Property(x => x.DomainEventJson)\n            .HasMaxLength(8000)\n            .IsRequired();\n\n\n        builder.Property(x => x.Dispatched)\n            .IsRequired();\n\n\n        builder.Property(x => x.PersistedAt)\n            .IsRequired();\n\n\n        builder.Property(x => x.DispatchedAt)\n            .IsRequired(false);\n\n\n        builder.Property(x => x.UserId)\n            .HasMaxLength(50);\n\n\n        builder.HasIndex(\n            nameof(DomainEventReference.Dispatched),\n            nameof(DomainEventReference.PersistedAt));\n    }\n}\n```\n### How the aggregate root stores the domain event\n\n\nThe aggregate root needs a collection of domain events on it.\n\n\n```cs\npublic class DomainEventsCollection\n{\n    private readonly List<DomainEvent> domainEvents = new();\n    private readonly object syncLock = new();\n\n\n    public void Raise<T>(T domainEvent)\n        where T : DomainEvent\n    {\n        lock (this.syncLock)\n        {\n            this.domainEvents.Add(domainEvent);\n        }\n    }\n\n\n    public DomainEvent[] GetAndClear()\n    {\n        lock (this.syncLock)\n        {\n            var events = this.domainEvents.ToArray();\n            this.domainEvents.Clear();\n\n\n            return events;\n        }\n    }\n}\n```\n```cs\npublic abstract class AggregateRoot : Entity\n{\n    protected AggregateRoot()\n        : base(Guid.NewGuid())\n    {\n    }\n\n\n    protected AggregateRoot(Guid id)\n        : base(id)\n    {\n    }\n\n\n    public DomainEventsCollection DomainEvents { get; } = new DomainEventsCollection();\n}\n```\nAnd here's a sample implementation of an aggregate root \"raising\" a domain event.\n\n\nIn this example, a menu item is being added to the order of a table at a restaurant.\n\n\n```cs\npublic class Table : AggregateRoot\n{\n    private readonly List<Order> orders = new();\n\n\n    public Table(Guid id, int tableNumber)\n        : base(id)\n    {\n        this.TableNumber = tableNumber;\n    }\n\n\n    public Order? CurrentOrder => this.orders\n        .Where(x => x.OrderStatusId != OrderStatus.Paid)\n        .Where(x => !x.IsDeleted)\n        .OrderByDescending(x => x.CreatedAtUtc)\n        .FirstOrDefault();\n\n\n    public int TableNumber { get; protected set; }\n    public bool IsInUse { get; protected set; }\n    public IReadOnlyCollection<Order> Orders => this.orders;\n\n\n    public void OrderMenuItem(MenuItem menuItem, Guid correlationId)\n    {\n        if (!this.IsInUse || this.CurrentOrder == null)\n        {\n            throw new DomainException(ErrorMessages.CannotOrderIfTableNotInUse);\n        }\n\n\n        this.CurrentOrder.AddItem(menuItem);\n\n\n        this.DomainEvents.Raise(new MenuItemAddedToOrderDomainEvent(\n            correlationId,\n            this.Id,\n            this.TableNumber,\n            this.CurrentOrder.Id,\n            menuItem.Id,\n            menuItem.Price));\n    }\n\n\n    public static class ErrorMessages\n    {\n        public const string CannotOrderIfTableNotInUse = \"Cannot order items if table is not in use\";\n    }\n}\n```\n### How the DbContext stores the domain event\n\n\nWe are going to use a [SaveChangesInterceptor](https://learn.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.diagnostics.savechangesinterceptor) to find the domain events added to our aggregate roots and add them as `DomainEventReference` instances before \"save changes\" executes.\n\n\nTo do that, we need to be able easily identify the `DbSet` for our `DomainEventReference` entities.\n\n\nSo, we've created an `IApplicationDbContext` interface that we can add to our Entity Framework `DbContext`.\n\n\n```cs\npublic interface IApplicationDbContext\n{\n    DbSet<DomainEventReference>? DomainEventReferences { get; }\n}\n```\nAnd here's the interceptor that find the domain events on the aggregate roots and stores them in the `DbContext`.\n\n\n```cs\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.EntityFrameworkCore.ChangeTracking;\nusing Microsoft.EntityFrameworkCore.Diagnostics;\n\n\npublic class DomainEventSaveChangesInterceptor<TContext> : SaveChangesInterceptor\n    where TContext : DbContext, IApplicationDbContext\n{\n    public override InterceptionResult<int> SavingChanges(\n        DbContextEventData eventData,\n        InterceptionResult<int> result)\n    {\n        this.StoreDomainEvents(eventData.Context);\n\n\n        return base.SavingChanges(eventData, result);\n    }\n\n\n    public override ValueTask<InterceptionResult<int>> SavingChangesAsync(\n        DbContextEventData eventData,\n        InterceptionResult<int> result,\n        CancellationToken cancellationToken = default)\n    {\n        this.StoreDomainEvents(eventData.Context);\n\n\n        return base.SavingChangesAsync(eventData, result, cancellationToken);\n    }\n\n\n    private void StoreDomainEvents(DbContext? context)\n    {\n        if (context == null || context is not TContext)\n        {\n            return;\n        }\n\n\n        foreach (var entry in context.ChangeTracker.Entries().ToList())\n        {\n            this.StoreDomainEventsForEntry((TContext)context, entry);\n        }\n    }\n\n\n    private void StoreDomainEventsForEntry(TContext context, EntityEntry entry)\n    {\n        if (entry.Entity is not AggregateRoot aggregateRootEntity)\n        {\n            return;\n        }\n\n\n        var events = aggregateRootEntity.DomainEvents.GetAndClear();\n\n\n        foreach (var domainEvent in events)\n        {\n            if (domainEvent == null)\n            {\n                continue;\n            }\n\n\n            var reference = new DomainEventReference(domainEvent);\n\n\n            context.DomainEventReferences?.Add(reference);\n        }\n    }\n}\n```\nFinally, here's an abstract `DbContext` implementation that exposes the `DomainEventReference` `DbSet` and adds the `DomainEventSaveChangesInterceptor`.\n\n\n```cs\nusing Microsoft.EntityFrameworkCore;\n\n\npublic abstract class ApplicationDbContext<TContext> : DbContext, IApplicationDbContext\n    where TContext : DbContext, IApplicationDbContext\n{\n    protected ApplicationDbContext(DbContextOptions<TContext> options)\n        : base(options)\n    {\n    }\n\n\n    public DbSet<DomainEventReference>? DomainEventReferences { get; internal set; }\n\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        base.OnModelCreating(modelBuilder);\n\n\n        modelBuilder.ApplyConfiguration(new DomainEventReferenceConfiguration());\n\n\n        this.ConfigureDatabaseModel(modelBuilder);\n    }\n\n\n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n    {\n        base.OnConfiguring(optionsBuilder);\n\n\n        optionsBuilder.AddInterceptors(new DomainEventSaveChangesInterceptor<TContext>());\n    }\n\n\n    protected abstract void ConfigureDatabaseModel(ModelBuilder modelBuilder);\n}\n```\n## Dispatching Domain Events\n\n\nThe code below reads from the database table for the `DomainEventReference` entity and dispatches them in batches of 50.\n\n\nFor event row, it deserializes the JSON to the original `IDomainEvent` and because `IDomainEvent` implements `INotification` from `MediatR`, you can use the `Publish` to achieve the publisher-subscriber pattern; there can be multiple notification handlers for each event.  Conversely, if there are not notification handlers, `MediatR` will handle this for us and return successfully.\n\n\nThe domain event does not get marked as \"dispatched\" in the database unless all dispatching succeeds.\n\n\nThere is a downside here because you could have three notification handlers for an event, two could succeed and one could fail, causing the event does not get marked as dispatched.\n\n\nAny process that tries to re-dispatch will attempt all three handlers again, so you could get duplication of certain handlers.\n\n\nHowever, I think this is still better than the other scenario I outlined earlier.\n\n\n```cs\nusing MediatR;\nusing Microsoft.EntityFrameworkCore;\nusing Serilog;\n\n\npublic class DomainEventDispatcher<TContext>\n    where TContext : DbContext, IApplicationDbContext\n{\n    private const int BatchSize = 50;\n\n\n    private readonly IDbContextFactory<TContext> dbContextFactory;\n    private readonly IMediator mediator;\n    private readonly ILogger logger;\n\n\n    public DomainEventDispatcher(\n        IDbContextFactory<TContext> dbContextFactory,\n        IMediator mediator,\n        ILogger logger)\n    {\n        this.dbContextFactory = dbContextFactory;\n        this.mediator = mediator;\n        this.logger = logger.ForContext<DomainEventDispatcher<TContext>>();\n    }\n\n\n    public async Task DispatchEvents(CancellationToken cancellationToken)\n    {\n        var eventsToDispatch = await this.ThereAreEventsToDispatch(cancellationToken);\n\n\n        while (eventsToDispatch && !cancellationToken.IsCancellationRequested)\n        {\n            await this.DispatchBatch(cancellationToken);\n\n\n            eventsToDispatch = await this.ThereAreEventsToDispatch(cancellationToken);\n        }\n    }\n\n\n    private async Task<bool> ThereAreEventsToDispatch(CancellationToken token)\n    {\n        using (var scope = this.dbContextFactory.CreateDbContext())\n        {\n            var dbSet = scope.Set<DomainEventReference>();\n\n\n            if (dbSet == null)\n            {\n                return false;\n            }\n\n\n            return await dbSet\n                .Where(x => !x.Dispatched)\n                .OrderBy(x => x.PersistedAt)\n                .AnyAsync(token);\n        }\n    }\n\n\n    private async Task DispatchBatch(CancellationToken token)\n    {\n        using (var scope = this.dbContextFactory.CreateDbContext())\n        {\n            var dbSet = scope.Set<DomainEventReference>();\n            if (dbSet == null)\n            {\n                return;\n            }\n\n\n            var events = await dbSet\n                .Where(x => !x.Dispatched)\n                .OrderBy(x => x.PersistedAt)\n                .Take(BatchSize)\n                .ToArrayAsync(token);\n\n\n            var domainEvents = new List<DomainEvent>();\n\n\n            foreach (var domainEventReference in events)\n            {\n                domainEventReference.Dispatch();\n\n\n                var domainEvent = domainEventReference.ToDomainEvent();\n\n\n                if (domainEvent == null)\n                {\n                    this.logger.Warning(\n                        \"Could not deserialize DomainEventReference {Id}\",\n                        domainEventReference.Id);\n                }\n                else\n                {\n                    domainEvents.Add(domainEvent);\n                }\n            }\n\n\n            if (domainEvents.Any())\n            {\n                foreach (var domainEvent in domainEvents)\n                {\n                    await this.mediator.Publish(domainEvent, token);\n                }\n            }\n\n\n            await scope.SaveChangesAsync(token);\n        }\n    }\n}\n```\nSo the code above does the dispatching, but what triggers the dispatching?\n\n\nAs far as I know, there is nothing similar to the `SaveChangesInterceptor` that executes after a successful save changes.\n\n\nSo, we've decided to use a background service.\n\n\nIn the code below, we are expecting our `DomainEventDispatcher` to dispatch events every 2.5 seconds.\n\n\nSo, any events that failed to dispatch will be retried after 2.5 seconds.\n\n\n`DomainEventReference` does not currently have a \"retry count\" or a \"failed\" property and that is definitely an improvement that could be added; fail if retried 10 times.\n\n\nUnder this solution, we will keep retrying and failed events will be attempted before new events, potentially causing a performance issue if failed events build up.\n\n\n```cs\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Hosting;\n\n\nnamespace Lewee.Infrastructure.Data;\n\n\npublic class DomainEventDispatcherService<TContext> : BackgroundService\n    where TContext : DbContext, IApplicationDbContext\n{\n    public DomainEventDispatcherService(DomainEventDispatcher<TContext> domainEventDispatcher)\n    {\n        this.DomainEventDispatcher = domainEventDispatcher;\n    }\n\n\n    public DomainEventDispatcher<TContext> DomainEventDispatcher { get; }\n\n\n    protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        while (!stoppingToken.IsCancellationRequested)\n        {\n            await this.DomainEventDispatcher.DispatchEvents(stoppingToken);\n\n\n            await Task.Delay(2500, stoppingToken);\n        }\n    }\n}\n```\nThere are definitely better ways to achieve this.\n\n\nYou could override save changes on your `DbContext` to trigger your domain event dispatcher and later you use some sort of retry policy if any events fails to dispatch.\n\n\nThat would be more efficient, but more complicated and harder to implement.\n\n\n## Dependency Injection Configuration\n\n\n```cs\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.DependencyInjection;\n\n\npublic static class ApplicationDbContextServiceCollectionExtensions\n{\n    public static IServiceCollection ConfigureDatabase<T>(\n        this IServiceCollection services,\n        string connectionString)\n        where T : ApplicationDbContext<T>\n    {\n        services.AddDbContextFactory<T>(options => options.UseSqlServer(connectionString));\n        services.AddScoped<T>();\n\n\n        services.AddSingleton<DomainEventDispatcher<T>>();\n        services.AddHostedService<DomainEventDispatcherService<T>>();\n\n\n        return services;\n    }\n}\n```\n## This is a lot of boilerplate\n\n\nThis seems like a lot of code to achieve what I'd expect to be relatively straight-forward.\n\n\nGiven this is fairly common pattern and that DDD is used by a lot in software development, you'd expect that there are frameworks that do this for you.\n\n\nThat's what I've tried to achieve with [Lewee](https://github.com/TheMagnificent11/lewee).\n\n\nHowever, there's definitely a better way.\n\n\nIn a future blog post, I'd like to explore how to dispatch to a message broker, probably `RabbitMQ` via [MassTransit](https://masstransit.io), instead of using `Mediatr` notifications.  I feel like this is more flexible as any service within your distributed application can handle your domain events. not just the service that dispatches it.\n\n",
				"date_published": "2025-02-15T02:33:16+10:00",
				"url": "https://sajilicious.micro.blog/2025/02/15/domain-event-dispatching-using-the.html",
				"tags": ["dotnet","Domain Driven Design","Entity Framework"]
			}
	]
}
